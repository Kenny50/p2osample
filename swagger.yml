openapi: 3.0.0
info:
  title: 金玉峰投顧 api
  description: 新增 media 第三方資源， youtube, podcast
  version: 11.27.2204
servers:
  - url: https://jinyufeng-dev-api.jinyufeng.com.tw
    description: dev
  - url: http://localhost:3020
    description: local
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
security:
  - bearerAuth: []
tags:
  - name: 會員
  - name: 文章
    description: |-
      type 是指資料類型， source 指某類型的來源(針對 youtube 類型，每個頻道都是一種 source)

      article type:  
      0 -> podcast, 1 -> tiptap article, 2 -> youtube, 3 -> news

      source:  
      null -> 文章、podcast, 0 -> 金玉峰 yt 頻道, 1 -> 股耐 yt 頻道

      topic:

      0->全部, 1 -> 基礎面, 2 -> 技術面,3 -> 籌碼面,4 -> 其他
  - name: 後台
  - name: 後台 > 文章
  - name: 後台 > 圖片
  - name: 後台 > 帳戶
  - name: 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
  - name: 後台 > 訂閱 & 發票
  - name: 後台 > 試閱
  - name: 後台 > 公司群組
  - name: 後台 > podcast
  - name: 後台 > 評等
  - name: 後台 > 公司
  - name: 後台 > 產業
  - name: 後台 > pdf
  - name: 後台 > 卷商
  - name: 標籤、主題
  - name: Banner
  - name: 新聞
    description: rate, 1 -> positive, 0 -> neutral, -1 -> negative
  - name: 搜尋
    description: |-
      type 是指資料類型， source 指某類型的來源(針對 youtube 類型，每個頻道都是一種 source)

      article type:  
      0 -> podcast, 1 -> tiptap article, 2 -> youtube, 3 -> news

      source:  
      null -> 文章、podcast, 0 -> 金玉峰 yt 頻道, 1 -> 股耐 yt 頻道

      topic:

      0->全部, 1 -> 基礎面, 2 -> 技術面,3 -> 籌碼面,4 -> 其他
  - name: 訂閱
  - name: 試閱
  - name: 媒體影音
paths:
  /api/login/google:
    post:
      tags:
        - 會員
      summary: google login
      description: >-
        ```

        GOOGLE_CLIENT_ID=286825346535-u9i330mtainbb3cog1ctdjm15htvekjv.apps.googleusercontent.com

         ```
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - idToken
              properties:
                idToken:
                  type: string
                  description: google response code in query
                  example: >-
                    4/0AfJohXmoQ2AIfcD7kwlwgxAzvOPeR1B4K9jNoC5xfJSy-cNfsTBql5Pci53X2QdYepR-Hw
                redirectUrl:
                  type: string
                  example: http://localhost:5173
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  accessToken: YOUR_ACCESS_TOKEN
                  refreshToken: YOUR_REFRESH_TOKEN
  /api/auth/google:
    get:
      tags:
        - 會員
      summary: get auth google url
      description: 會重導向，沒有 response
      parameters:
        - name: redirectUrl
          in: query
          schema:
            type: string
          example: http://localhost:5173
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/line:
    post:
      tags:
        - 會員
      summary: line login
      description: 'project id : 2001662721'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - idToken
              properties:
                idToken:
                  type: string
                  description: line id token
                  example: v4THGFQPOHeHXr5GT9pI
                redirectUrl:
                  type: string
                  example: https://www.google.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  accessToken: YOUR_ACCESS_TOKEN
                  refreshToken: YOUR_REFRESH_TOKEN
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: Request failed with status code 400
  /api/member/refresh-token:
    post:
      tags:
        - 會員
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: ''
                  example: '{{refresh_token}}'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  accessToken: YOUR_ACCESS_TOKEN
  /api/member/update-information:
    post:
      tags:
        - 會員
      summary: update personal information
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 永翰
                email:
                  type: string
                  example: yunghancareer@gmail.com
                phone:
                  type: integer
                  example: '0936965814'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  name: 永翰
                  email: hello@gmail.com
                  id: ea514474-4ed6-4e08-b59d-e7158c08fe92
                  avatar: >-
                    https://lh3.googleusercontent.com/a/ACg8ocJdBkMHHg9SweA2gsH6kYGNG1hjwYK7yyWHESWZUd1Pgdo=s96-c
                  loginType: google
                  thirdPartyIdentifier: '112345303661950802160'
                  isEmailValidate: false
                  isSubscribing: false
                  phone: '0936965814'
                  isPhoneValidate: false
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: 此電子郵箱已被使用
  /api/member/sent-validate-sms:
    get:
      tags:
        - 會員
      summary: 寄驗證簡訊
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: your email is already validated
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: validate sms has sent, please check out your phone
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: email field is empty
  /api/member/information:
    get:
      tags:
        - 會員
      summary: 個人資訊
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  name: Chang Kenneth
                  email: kennethchangla@gmail.com
                  id: ea514474-4ed6-4e08-b59d-e7158c08fe92
                  avatar: >-
                    https://lh3.googleusercontent.com/a/ACg8ocJdBkMHHg9SweA2gsH6kYGNG1hjwYK7yyWHESWZUd1Pgdo=s96-c
                  loginType: google
                  thirdPartyIdentifier: '112345303661950802160'
                  isEmailValidate: true
                  isSubscribing: false
                  phone: ''
                  isPhoneValidate: false
                  latestSubscription:
                    id: 2
                    memberId: 1928297d-159b-43cc-9ea8-1560ba1a595b
                    isSubscribing: true
                    status: active
                    plan: month
                    amount: 170
                    email: kennethchangla@gmail.com
                    nextRenewalDate: '2023-11-21'
                    startAt: '2023-11-20T17:40:35.000Z'
                    maskedCreditCardNo: 400022******1111
                    createdAt: '2023-11-20T17:39:50.000Z'
                    updatedAt: '2023-11-20T17:40:36.000Z'
                  createdAt: '2023-11-10T07:37:42.000Z'
                  updatedAt: '2023-11-10T07:37:42.000Z'
  /api/member/delete-account:
    delete:
      tags:
        - 會員
      summary: delete account
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: succcess
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: refund is processing
                  value:
                    data:
                      message: Cannot delete account while refund is processing.
                example-1:
                  summary: reject, subscription plan period
                  value:
                    data:
                      message: >-
                        Cannot delete account while in your subscription plan
                        period.
  /api/member/validate-email:
    get:
      tags:
        - 會員
      summary: mail validate
      security:
        - bearerAuth: []
      parameters:
        - name: signature
          in: query
          schema:
            type: integer
          required: true
          description: link from email, 要有個前端專門處理驗證的畫面
          example: '982677'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: 信箱驗證成功
  /api/member/validate-sms:
    get:
      tags:
        - 會員
      summary: sms validate
      security:
        - bearerAuth: []
      parameters:
        - name: signature
          in: query
          schema:
            type: integer
          required: true
          description: code for sms
          example: '604842'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: 手機號碼驗證成功
  /api/member/term/{term}:
    post:
      tags:
        - 會員
      summary: sign policy
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: term
          in: path
          schema:
            type: string
          required: true
          description: '[required] privacy, user, subscribe'
          example: privacy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
    get:
      tags:
        - 會員
      summary: get policy
      parameters:
        - name: term
          in: path
          schema:
            type: string
          required: true
          description: '[required] privacy, user, subscribe'
          example: privacy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 4
                  type: privacy
                  content: Privacy Policy content goes here.
  /api/member/sent-validate-email:
    post:
      tags:
        - 會員
      summary: sent validate email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                redirectUrl:
                  type: string
                  example: http://localhost:5173
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
  /api/member/upload-avatar:
    post:
      tags:
        - 會員
      summary: upload avatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/article/all-topic-latest:
    get:
      tags:
        - 文章
      summary: 首頁文章各主題最新清單
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    title: 你好，世界
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    author:
                      name: Remus
                      id: 1
                    companies:
                      - id: 1
                        code: '1101'
                        name: 台泥
                      - id: 2
                        code: '1102'
                        name: 亞泥
                    topics:
                      - id: 3
                        name: 基本面
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-11T00:00:00.000Z'
                    previewImage:
                      id: 1
                      url: >-
                        https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                        (1).png
                    type: 1
                    isLimited: true
                    source: null
                  - id: 2
                    title: 雪烏龍
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    author:
                      name: Rick
                      id: 1
                    companies:
                      - id: 1
                        code: '1101'
                        name: 台泥
                      - id: 2
                        code: '1102'
                        name: 亞泥
                    topics:
                      - id: 3
                        name: 基本面
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-10T00:00:00.000Z'
                    previewImage:
                      id: 1
                      url: >-
                        https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                        (1).png
                    type: 1
                    isLimited: false
                    source: null
  /api/article/{id}:
    get:
      tags:
        - 文章
      summary: get article content
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '779'
            ETag:
              schema:
                type: string
                example: W/"30b-JDRZD9rmY6q8/bhkL13ldpj5wlk"
            Date:
              schema:
                type: string
                example: Sun, 26 Nov 2023 10:08:44 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  content: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                  title: 你好，世界
                  author:
                    name: Rick
                    id: 2
                  companies:
                    - id: 3
                      code: '1103'
                      name: 嘉泥
                    - id: 4
                      code: '1104'
                      name: 環泥
                  topics:
                    - id: 3
                      name: 基本面
                    - id: 4
                      name: 籌碼面
                    - id: 5
                      name: 技術面
                  tags:
                    - id: 1
                      name: 半導體
                      isRecommended: false
                    - id: 2
                      name: IC 設計
                      isRecommended: false
                  publishedAt: '2023-11-22T16:11:23.000Z'
                  previewImage:
                    id: 1
                    url: >-
                      https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                      (1).png
                  type: 1
                  isLimited: false
                  source: null
                  isClipped: false
  /api/podcast/{id}:
    get:
      tags:
        - 文章
      summary: get podcast content
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] podcast id, not the one from spotify'
          example: '11'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  title: EP 89 | 科普就是在妖言惑眾 ft. 怪奇事務所所長
                  content: >-
                    {"description":"你知道嗎？博恩可能把「信度」講錯了喔","spotifyId":"2WJBISLc7sVsJFrSv3hVLk","spotifyLink":"https://open.spotify.com/episode/2WJBISLc7sVsJFrSv3hVLk","applePodcastLink":"https://open.spotify.com/episode/2WJBISLc7sVsJFrSv3hVLk","soundOnLink":"https://open.spotify.com/episode/2WJBISLc7sVsJFrSv3hVLk"}
                  topic:
                    name: 基本面
                    id: 1
                  tags:
                    - name: 毛利
                      id: 1
                  publishDate: '2023-05-02T00:00:00.000Z'
                  previewImage: null
                  type: 0
                  isLimited: false
                  source: null
  /api/article:
    get:
      tags:
        - 文章
      summary: get latest articles
      description: |-
        topic query value

        不傳 -> 全部  
        1 -> 基本面（基本面、總經）  
        2 -> 技術面  
        3 -> 籌碼面  
        4 -> 其他
      parameters:
        - name: topic
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '2122'
            ETag:
              schema:
                type: string
                example: W/"84a-HRIF84rN7FbJmiDHFsL6xKxH3kc"
            Date:
              schema:
                type: string
                example: Fri, 24 Nov 2023 19:23:06 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  currentPage: 0
                  pageSize: 10
                  totalCount: 2
                  totalPage: 1
                  articles:
                    - id: 2
                      title: 你好，世界
                      description: >-
                        新手也能懂的 Kotlin Collection
                        賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                        Collection 有關。Collection
                        簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                        List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                        團隊深知資料處理的重要性，在標準函式庫（Stan…
                      author:
                        name: Remus
                        id: 1
                      companies: []
                      topics:
                        - id: 3
                          name: 基本面
                        - id: 4
                          name: 籌碼
                        - id: 5
                          name: 技術
                      tags: []
                      publishDate: '2023-11-22T16:11:23.000Z'
                      previewImage: null
                      type: 1
                      isLimited: false
                      source: null
                    - id: 1
                      title: 你好，世界
                      description: >-
                        新手也能懂的 Kotlin Collection
                        賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                        Collection 有關。Collection
                        簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                        List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                        團隊深知資料處理的重要性，在標準函式庫（Stan…
                      author:
                        name: Remus
                        id: 1
                      companies:
                        - id: 1
                          code: '1101'
                          name: 台泥
                        - id: 2
                          code: '1102'
                          name: 亞泥
                      topics:
                        - id: 3
                          name: 基本面
                        - id: 4
                          name: 籌碼
                        - id: 5
                          name: 技術
                      tags:
                        - id: 1
                          name: 半導體
                        - id: 2
                          name: IC 設計
                      publishDate: '2023-11-21T16:11:23.000Z'
                      previewImage: null
                      type: 1
                      isLimited: false
                      source: null
  /api/podcast:
    get:
      tags:
        - 文章
      summary: get latest podcasts
      parameters:
        - name: topic
          in: query
          schema:
            type: integer
          description: |-
            0 -> 全部
            1 -> 基本面（基本面、總經）
            2 -> 技術面
            3 -> 籌碼面
            4 -> 其他
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          example: '30'
        - name: page
          in: query
          schema:
            type: integer
          example: '0'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  currentPage: 0
                  pageSize: 30
                  totalCount: 515
                  articles:
                    - id: 1
                      title: 你好，世界
                      description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                      topic:
                        name: 基本面
                        id: 1
                      author:
                        name: Rick
                        id: 1
                      tags:
                        - name: 毛利
                          id: 1
                      publishDate: '2023-11-11T00:00:00.000Z'
                      previewImage: null
                      type: 1
                      isLimited: true
                      source: null
                    - id: 2
                      title: 雪烏龍
                      description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                      topic:
                        name: 總經
                        id: 2
                      author:
                        name: Rick
                        id: 1
                      tags:
                        - name: 毛利
                          id: 1
                      publishDate: '2023-11-10T00:00:00.000Z'
                      previewImage: https://path/to/image
                      type: 1
                      isLimited: false
                      source: null
  /api/authors:
    get:
      tags:
        - 文章
      summary: Authors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  authors:
                    - name: Rick
                      id: 1
                      avatar: https://path/to/img
                    - name: Riick
                      id: 2
                      avatar: https://path/to/img
  /api/article/{id}/related:
    get:
      tags:
        - 文章
      summary: related articles
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1355'
            ETag:
              schema:
                type: string
                example: W/"54b-1U6BbM8xGUI0EsTXqnaRRyJCy+Y"
            Date:
              schema:
                type: string
                example: Sun, 26 Nov 2023 10:11:00 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  totalPage: 0
                  articles:
                    - id: 2
                      title: 你好，世界
                      description: >-
                        新手也能懂的 Kotlin Collection
                        賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                        Collection 有關。Collection
                        簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                        List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                        團隊深知資料處理的重要性，在標準函式庫（Stan…
                      author:
                        name: Rick
                        id: 2
                      companies:
                        - id: 3
                          code: '1103'
                          name: 嘉泥
                        - id: 4
                          code: '1104'
                          name: 環泥
                      topics:
                        - id: 3
                          name: 基本面
                        - id: 4
                          name: 籌碼面
                        - id: 5
                          name: 技術面
                      tags:
                        - id: 1
                          name: 半導體
                          isRecommended: false
                          sort: 0
                          hide: true
                          topicId: 1
                        - id: 2
                          name: IC 設計
                          isRecommended: false
                          sort: 1
                          hide: false
                          topicId: 1
                      publishDate: '2023-11-22T16:11:23.000Z'
                      previewImage:
                        id: 1
                        url: >-
                          https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                          (1).png
                      type: 1
                      isLimited: false
                      source: null
  /api/dashboard/article:
    get:
      tags:
        - 後台 > 文章
      summary: get latest articles
      description: |-
        topic query value

        不傳 -> 全部  
        1 -> 基本面（基本面、總經）  
        2 -> 技術面  
        3 -> 籌碼面  
        4 -> 其他
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
        - name: title
          in: query
          schema:
            type: string
          description: '[string]'
          example: 世界
        - name: author
          in: query
          schema:
            type: integer
          description: '[int]'
          example: '2'
        - name: topic
          in: query
          schema:
            type: integer
          description: '[int]'
          example: '3'
        - name: tag
          in: query
          schema:
            type: integer
          description: '[int]'
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1218'
            ETag:
              schema:
                type: string
                example: W/"4c2-Z7njMDjTF6qghD3WGwhCuNE5HWU"
            Date:
              schema:
                type: string
                example: Sat, 25 Nov 2023 18:38:11 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  currentPage: 0
                  pageSize: 30
                  totalCount: 1
                  totalPage: 1
                  articles:
                    - id: 1
                      title: 你好，世界
                      description: >-
                        新手也能懂的 Kotlin Collection
                        賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                        Collection 有關。Collection
                        簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                        List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                        團隊深知資料處理的重要性，在標準函式庫（Stan…
                      author:
                        name: Remus
                        id: 1
                      companies:
                        - id: 1
                          code: '1101'
                          name: 台泥
                        - id: 2
                          code: '1102'
                          name: 亞泥
                      topics:
                        - id: 3
                          name: 基本面
                      tags:
                        - id: 1
                          name: 半導體
                          isRecommended: false
                      publishDate: '2023-11-21T16:11:23.000Z'
                      previewImage:
                        id: 1
                        url: >-
                          https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                          (1).png
                      type: 1
                      isLimited: false
                      source: null
                      views: 4
    post:
      tags:
        - 後台 > 文章
      summary: create an article
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - fullContent
                - rawContent
                - clippedContent
                - topics[0]
                - topics[1]
                - isLimited
                - isDraft
                - previewImageId
              properties:
                title:
                  type: string
                  description: ''
                  example: 標題
                fullContent:
                  type: string
                  description: json stringtify
                  example: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                rawContent:
                  type: string
                  description: article.html, podcast.description
                  example: >-
                    <h2><strong>新手也能懂的 Kotlin Collection 賞玩門道</strong></h2><img
                    src="https://i.imgur.com/2vCuMM9.jpeg"  alt="canyon"
                    width="500"
                    height="600"><p>在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                    Collection 有關。Collection
                    簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                    List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。</p><p>Kotlin
                    團隊深知資料處理的重要性，在標準函式庫（Stan…</p>
                clippedContent:
                  type: string
                  description: json stringtify
                  example: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                topics[0]:
                  type: integer
                  description: ''
                  example: '27'
                topics[1]:
                  type: integer
                  description: ''
                  example: '30'
                tags[0]:
                  type: integer
                  example: '179'
                tags[1]:
                  type: integer
                  example: '200'
                isLimited:
                  type: boolean
                  description: ''
                  example: 'false'
                isDraft:
                  type: boolean
                  description: ''
                  example: 'false'
                companies[0]:
                  type: integer
                  example: '1'
                companies[1]:
                  type: integer
                  example: '2'
                previewImageId:
                  type: integer
                  description: ''
                  example: '2'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '18'
            ETag:
              schema:
                type: string
                example: W/"12-KZIEXCqq4aVJNVtebn2QvkzdD6s"
            Date:
              schema:
                type: string
                example: Sat, 25 Nov 2023 18:42:39 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 27
  /api/dashboard/article/{id}:
    get:
      tags:
        - 後台 > 文章
      summary: get article content
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '1'
      responses:
        undefined:
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 123
                  title: 你好，世界
                  content: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                  topics:
                    - name: 基本面
                      id: 1
                  author:
                    name: Rick
                    id: 1
                  companies:
                    - id: 1
                      code: '1101'
                      name: 台泥
                    - id: 2
                      code: '1102'
                      name: 亞泥
                  tags:
                    - name: 毛利
                      id: 1
                  publishDate: '2023-05-02T00:00:00.000Z'
                  previewImage:
                    id: 1
                    path: path
                  type: 1
                  isLimited: true
                  source: null
                  views: 4
    put:
      tags:
        - 後台 > 文章
      summary: update article
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - fullContent
                - rawContent
                - isLimited
                - isDraft
              properties:
                title:
                  type: string
                  description: ''
                  example: 你好
                fullContent:
                  type: string
                  description: json stringtify
                  example: >-
                    {"type":"dpooc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                rawContent:
                  type: string
                  description: ''
                  example: >-
                    <h2><strong>也能懂的 Kotlin Collection 賞玩門道</strong></h2><img
                    src="https://i.imgur.com/2vCuMM9.jpeg"  alt="canyon"
                    width="500"
                    height="600"><p>在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                    Collection 有關。Collection
                    簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                    List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。</p><p>Kotlin
                    團隊深知資料處理的重要性，在標準函式庫（Stan…</
                clippedContent:
                  type: string
                  example: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                topics[0]:
                  type: integer
                  example: '28'
                topics[1]:
                  type: integer
                  example: '30'
                tags[0]:
                  type: integer
                  example: '188'
                tags[1]:
                  type: integer
                  example: '200'
                isLimited:
                  type: boolean
                  description: ''
                  example: 'false'
                isDraft:
                  type: boolean
                  description: ''
                  example: 'false'
                companies[0]:
                  type: integer
                  example: '3'
                companies[1]:
                  type: integer
                  example: '4'
                previewImageId:
                  type: integer
                  example: '2'
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '17'
            ETag:
              schema:
                type: string
                example: W/"11-mhIzk+6CZQ0xNbkxdoJWFe0RFnY"
            Date:
              schema:
                type: string
                example: Sat, 25 Nov 2023 18:42:05 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
    delete:
      tags:
        - 後台 > 文章
      summary: delete article by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  status: success
  /api/dashboard/image:
    post:
      tags:
        - 後台 > 圖片
      summary: upload image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  description: '[檔案格式：jpg, jpeg, png]'
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: 檔案上傳成功！
                  imageUrl: >-
                    https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/75da1d23-c0ad-4ed2-bb20-2c53edfa75d2
                  image:
                    id: 6
                    name: sticker (1) (16).png
                    path: 75da1d23-c0ad-4ed2-bb20-2c53edfa75d2
                    creatorType: User
                    creatorId: 1
                    updatedAt: '2023-11-25T05:58:12.320Z'
                    createdAt: '2023-11-25T05:58:12.320Z'
  /api/dashboard/users:
    get:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 後台帳號 list
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    name: VossA
                    avatar: https://path/to/avatar
                  - id: 1
                    name: VossB
                    avatar: https://path/to/avatar
                  - id: 1
                    name: VossC
                    avatar: https://path/to/avatar
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  error: permission denied
  /api/dashboard/user/{id}:
    get:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 檢視指定後台帳號
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[ required ] 用戶 id'
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 24
                  account: Vossvoss
                  name: employee
                  avatar: ''
                  role:
                    code: employee24
                    name: employee
                  permissions:
                    - resourceCode: user-resource
                      operation: create
                    - resourceCode: user-resource
                      operation: read
                    - resourceCode: user-resource
                      operation: update
                    - resourceCode: user-resource
                      operation: delete
                    - resourceCode: pdf
                      operation: create
                    - resourceCode: pdf
                      operation: read
                    - resourceCode: pdf
                      operation: update
                    - resourceCode: pdf
                      operation: delete
                    - resourceCode: article
                      operation: create
                    - resourceCode: article
                      operation: read
                    - resourceCode: article
                      operation: update
                    - resourceCode: article
                      operation: delete
                    - resourceCode: paid
                      operation: create
                    - resourceCode: paid
                      operation: read
                    - resourceCode: paid
                      operation: update
                    - resourceCode: paid
                      operation: delete
                    - resourceCode: paid
                      operation: read
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: permission denied
    delete:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 刪除指定後台帳號
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required]'
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: permission denied
  /api/dashboard/user/{id}/update-password:
    post:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 更新指定後台帳號密碼
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: password
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: permission denied
  /api/dashboard/user/{id}/permission:
    post:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 更新指定用戶權限
      description: 傳入該員工需要的所有權限，沒傳的權限會刪除，有新增的權限會新增
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                permissions[0][resourceCode]:
                  type: string
                  example: pdf
                permissions[0][operation]:
                  type: string
                  example: read
                permissions[1][resourceCode]:
                  type: string
                  example: article
                permissions[1][operation]:
                  type: string
                  example: delete
                permissions[2][resourceCode]:
                  type: string
                  example: backend
                permissions[2][operation]:
                  type: string
                  example: update
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required]'
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/members:
    get:
      tags:
        - 後台 > 帳戶
      summary: 取得前台使用者列表
      parameters:
        - name: subscription
          in: query
          schema:
            type: string
          description: '`is_subscribing` / `renewal_disabled` / `finished` / `none`'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/user/create:
    post:
      tags:
        - 後台 > 帳戶
      summary: 創建內部帳戶
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                account:
                  type: string
                  description: '[ required ] '
                  example: KennyRich
                password:
                  type: string
                  description: '[ required ] '
                  example: KennyRich
                name:
                  type: string
                  example: Rich
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: permission denied
  /api/dashboard/user/login:
    post:
      tags:
        - 後台 > 帳戶
      summary: 登入內部帳戶
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - account
                - password
              properties:
                account:
                  type: string
                  description: 最少六位英數
                  example: Rick88888
                password:
                  type: string
                  description: 最少六位英數
                  example: hashpassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  accessToken: YOUR_ACCESS_TOKEN
                  refreshToken: YOUR_REFRESH_TOKEN
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: Invalid username or password.
  /api/dashboard/user/refresh:
    post:
      tags:
        - 後台 > 帳戶
      summary: 刷新內部帳戶 refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: '{{refresh_token}}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  accessToken: YOUR_ACCESS_TOKEN
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: Invalid username or password.
  /api/dashboard/user:
    get:
      tags:
        - 後台 > 帳戶
      summary: 檢視自己後台帳號資料
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 11
                  account: Remus88888
                  name: Remus88888
                  avatar: https://
                  role:
                    code: admin
                    name: admin
                  permissions:
                    - resourceCode: user-resource
                      operation: create
                    - resourceCode: user-resource
                      operation: read
                    - resourceCode: user-resource
                      operation: update
                    - resourceCode: user-resource
                      operation: delete
                    - resourceCode: pdf
                      operation: create
                    - resourceCode: pdf
                      operation: read
                    - resourceCode: pdf
                      operation: update
                    - resourceCode: pdf
                      operation: delete
                    - resourceCode: article
                      operation: create
                    - resourceCode: article
                      operation: read
                    - resourceCode: article
                      operation: update
                    - resourceCode: article
                      operation: delete
                    - resourceCode: permission
                      operation: read
                    - resourceCode: permission
                      operation: update
                    - resourceCode: paid
                      operation: read
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: permission denied
  /api/dashboard/user/update-information:
    post:
      tags:
        - 後台 > 帳戶
      summary: 內部帳戶更新自己個人資訊
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Remus88888
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
  /api/dashboard/user/upload-avatar:
    post:
      tags:
        - 後台 > 帳戶
      summary: 內部帳戶更新自己個人頭像
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: user avatar
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  url: https://path/to/avatar
  /api/dashboard/user/update-password:
    post:
      tags:
        - 後台 > 帳戶
      summary: 內部帳戶更新自己密碼
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: hashpassword
                oldPassword:
                  type: string
                  example: hashpassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
  /api/dashboard/refund-bills:
    get:
      tags:
        - 後台 > 訂閱 & 發票
      summary: 取得退費清單
      parameters:
        - name: refund_status
          in: query
          schema:
            type: string
          description: '`waiting` / `refunded`'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1016'
            ETag:
              schema:
                type: string
                example: W/"3f8-c0xdaaAkrmMDtBhO5Y036tyyEOI"
            Date:
              schema:
                type: string
                example: Sat, 25 Nov 2023 17:18:52 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 2
                totalCount: 2
                data:
                  - id: 5
                    memberId: 1928297d-159b-43cc-9ea8-1560ba1a595b
                    plan: month
                    email: no-reply@gmail.com
                    isRefunded: true
                    canceledAt: '2023-11-24T18:49:05.000Z'
                    refundedAt: '2023-11-20T17:40:35.000Z'
                    maskedCreditCardNo: 400022******1111
                    type: refund
                    amount: 170
                    startAt: '2023-11-20T17:40:35.000Z'
                    endAt: '2023-12-20T17:40:35.000Z'
                    createdByUserId: 7
                    paymentPlatformNo: mock_order_1700501990814_1
                    paymentResponsePayload: null
                    createdAt: '2023-11-20T17:40:35.000Z'
                    updatedAt: '2023-11-20T17:40:35.000Z'
                  - id: 7
                    memberId: 6a518ce9-8bcd-41d4-911e-e849b3b21cf6
                    plan: month
                    email: yot4106@gmail.com
                    isRefunded: false
                    maskedCreditCardNo: 400022******1111
                    type: payment
                    amount: 170
                    startAt: '2023-11-21T16:44:27.000Z'
                    endAt: '2023-12-21T16:44:27.000Z'
                    createdByUserId: null
                    paymentPlatformNo: mock_order_1700585052751_1
                    paymentResponsePayload: null
                    createdAt: '2023-11-21T16:44:27.000Z'
                    updatedAt: '2023-11-21T16:44:27.000Z'
  /api/dashboard/upsert-refund-amount:
    post:
      tags:
        - 後台 > 訂閱 & 發票
      summary: 完成退費 (i.e. 編輯已退款金額)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                memberId: 1928297d-159b-43cc-9ea8-1560ba1a595b
                subscriptionId: 5
                amount: 18
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 5
                  memberId: 1928297d-159b-43cc-9ea8-1560ba1a595b
                  isSubscribing: false
                  isRefunded: true
                  autoRenewal: false
                  status: canceled
                  plan: month
                  amount: 170
                  email: no-reply@gmail.com
                  startAt: '2023-11-20T17:40:35.000Z'
                  canceledAt: '2023-11-24T18:49:05.000Z'
                  refundedAt: '2023-11-26T09:42:42.000Z'
                  maskedCreditCardNo: 400022******1111
                  createdAt: '2023-11-20T17:39:50.000Z'
                  updatedAt: '2023-11-26T09:42:42.000Z'
                  bills:
                    - id: 1
                      memberId: 1928297d-159b-43cc-9ea8-1560ba1a595b
                      subscriptionId: 5
                      plan: month
                      type: payment
                      amount: 170
                      maskedCreditCardNo: 400022******1111
                      startAt: '2023-11-20T17:40:35.000Z'
                      endAt: '2023-12-20T17:40:35.000Z'
                      paymentPlatformNo: mock_order_1700501990814_1
                      createdAt: '2023-11-20T17:40:35.000Z'
                      updatedAt: '2023-11-20T17:40:35.000Z'
                    - id: 6
                      memberId: 1928297d-159b-43cc-9ea8-1560ba1a595b
                      subscriptionId: 5
                      plan: month
                      type: refund
                      amount: 18
                      maskedCreditCardNo: 400022******1111
                      createdByUserId: 7
                      createdAt: '2023-11-26T09:42:42.000Z'
                      updatedAt: '2023-11-26T09:44:40.000Z'
  /api/dashboard/pdf/trial:
    put:
      tags:
        - 後台 > 試閱
      summary: 上傳試閱 pdf
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  description: upload
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/companyFilters:
    get:
      tags:
        - 後台 > 公司群組
      summary: get all company filter by user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - 後台 > 公司群組
      summary: create company group
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: ''
                  example: pub
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/companyFilters/{id}/companies:
    get:
      tags:
        - 後台 > 公司群組
      summary: get all company in :id group
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] company filter id'
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/companyFilters/{id}/pdfs:
    get:
      tags:
        - 後台 > 公司群組
      summary: get all company in :id group
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] company filter id'
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/companyFilters/insert-field:
    put:
      tags:
        - 後台 > 公司群組
      summary: add :company.code into :id group
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - id
                - companyCode
              properties:
                id:
                  type: integer
                  description: company filter id
                  example: '1'
                companyCode:
                  type: integer
                  description: company code
                  example: '1101'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/companyFilters/remove-field:
    delete:
      tags:
        - 後台 > 公司群組
      summary: delete :company.code from :id group
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/companyFilters/{id}:
    delete:
      tags:
        - 後台 > 公司群組
      summary: delete company filter
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] company filter'
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/companyFilters/{id}/rename:
    post:
      tags:
        - 後台 > 公司群組
      summary: rename
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: ''
                  example: ppuu
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] company filter'
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/podcast/callback:
    get:
      tags:
        - 後台 > podcast
      summary: get spotify token
      security:
        - noauthAuth: []
      parameters:
        - name: code
          in: query
          schema:
            type: string
          example: >-
            AQBAfrew3U8M110kzuZE1zvmx4kajcVo2ofGTmUC4d3vf6jXHho69qIwXUwU6mh7dCXqJCi
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/podcast/login:
    get:
      tags:
        - 後台 > podcast
      summary: request auth link
      security:
        - noauthAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: spotify
                accessToken: >-
                  BQCVnEsPREDEP1lJK-tvQG0hojF_C-c3GNC8Kj7IEM6W0GIhmolZc9NBWdJwifVXxh-zNOLqzrfZE0FFX8_Y3K_gF9YaSrE0w_oz-KEE6WhUB6YAZb0CXYaMmqYmUBHYDb-rdu6N5j5PN63hyogMFDSMIvlK1elJpEXLYE0gQ_GvMLCLBWVs942JgmKzse-vsUlzGJvLKv90-Kz0HT-kvQ
                refreshToken: >-
                  AQC7YFfGSLS0yWQAWPykmiJUauAvtmgm6QOH5zcHR2tEDAmD4l_elGgvuoDF6Jg0M21uiUryncR6O_iVzZu-Cdib5m9K6mTTPIx6cx5Uajrn3VkUjKhzFtS_zEm1S9zcBQk
                expir: '2023-11-20T22:05:35.056Z'
                createdAt: '2023-11-20T21:04:22.000Z'
                updatedAt: '2023-11-20T21:15:35.055Z'
  /api/dashboard/podcast/episode/latest:
    get:
      tags:
        - 後台 > podcast
      summary: latest episode
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                href: >-
                  https://api.spotify.com/v1/shows/2l21dV5M1Z1wKTChoXdHal/episodes?offset=0&limit=1
                items:
                  - audio_preview_url: >-
                      https://podz-content.spotifycdn.com/audio/clips/0l2pkT89zUrjBtDbDcloXK/clip_448069_508069.mp3
                    description: >-
                      💡本集重點 1. 記憶體報價分析 2. 記憶體庫存分析 3. 記憶體廠商個別故事 
                      記憶體隨著AI出現，而拉高規格帶動DDR5。記憶體屬於景氣循環股，大概是六到八季為一循環。今年6月時我們蒐集報告後認為記憶體谷底已過，可是到了8月記憶體平均價格依然下跌，幸好8月底的報價有稍微回升 
                      記憶體的復甦可以從市場訊息得知，目前終端通路庫存水位下降，至少可以開始消化原廠的庫存。近期的盤勢震盪，在操作上比較適合找低基期、低評價的個股，今天Elvis提供幾個有故事的個股跟大家分享 
                      Powered by Firstory Hosting
                    duration_ms: 1270846
                    explicit: false
                    external_urls:
                      spotify: https://open.spotify.com/episode/1FFrTaBgvKerZDwV2LvQ3B
                    href: https://api.spotify.com/v1/episodes/1FFrTaBgvKerZDwV2LvQ3B
                    html_description: >-
                      <p>&#x1f4a1;本集重點 <br />1. 記憶體報價分析 <br />2. 記憶體庫存分析 <br
                      />3. 記憶體廠商個別故事 <br /> <br
                      />記憶體隨著AI出現&#xff0c;而拉高規格帶動DDR5。記憶體屬於景氣循環股&#xff0c;大概是六到八季為一循環。今年6月時我們蒐集報告後認為記憶體谷底已過&#xff0c;可是到了8月記憶體平均價格依然下跌&#xff0c;幸好8月底的報價有稍微回升
                      <br /> <br
                      />記憶體的復甦可以從市場訊息得知&#xff0c;目前終端通路庫存水位下降&#xff0c;至少可以開始消化原廠的庫存。近期的盤勢震盪&#xff0c;在操作上比較適合找低基期、低評價的個股&#xff0c;今天Elvis提供幾個有故事的個股跟大家分享</p>
                      <br /> <br />Powered by <a href="https://firstory.me"
                      rel="nofollow">Firstory Hosting</a>
                    id: 1FFrTaBgvKerZDwV2LvQ3B
                    images:
                      - height: 640
                        url: >-
                          https://i.scdn.co/image/ab6765630000ba8aa75c733577d66a77dbbb2fb2
                        width: 640
                      - height: 300
                        url: >-
                          https://i.scdn.co/image/ab67656300005f1fa75c733577d66a77dbbb2fb2
                        width: 300
                      - height: 64
                        url: >-
                          https://i.scdn.co/image/ab6765630000f68da75c733577d66a77dbbb2fb2
                        width: 64
                    is_externally_hosted: false
                    is_playable: true
                    language: zh
                    languages:
                      - zh
                    name: 2023.09.22 【基本點線面】景氣循環股｜谷底走了好久｜記憶體
                    release_date: '2023-09-22'
                    release_date_precision: day
                    type: episode
                    uri: spotify:episode:1FFrTaBgvKerZDwV2LvQ3B
                limit: 1
                next: >-
                  https://api.spotify.com/v1/shows/2l21dV5M1Z1wKTChoXdHal/episodes?offset=1&limit=1
                offset: 0
                previous: null
                total: 147
  /api/dashboard/podcast/episode/all:
    get:
      tags:
        - 後台 > podcast
      summary: all-episode
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/podcast/soundon:
    get:
      tags:
        - 後台 > podcast
      summary: get soundon episode
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/podcast/apple:
    get:
      tags:
        - 後台 > podcast
      summary: get apple podcast episode
      security:
        - noauthAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: 回傳資料總數，預設是 300
          example: '300'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/rate:
    get:
      tags:
        - 後台 > 評等
      summary: get all rate
      security:
        - noauthAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 133
                  code: SB
                  name: 強力買進
                  order: 1
                - id: 134
                  code: B
                  name: 買進
                  order: 2
                - id: 135
                  code: IH
                  name: 增加持股
                  order: 3
                - id: 136
                  code: OP
                  name: 優於大盤
                  order: 4
                - id: 137
                  code: 'N'
                  name: 中立
                  order: 5
                - id: 138
                  code: T
                  name: 區間操作
                  order: 6
                - id: 139
                  code: H
                  name: 持有
                  order: 7
                - id: 140
                  code: R
                  name: 調降持股
                  order: 8
                - id: 141
                  code: OW
                  name: Overweight
                  order: 9
                - id: 142
                  code: UTB
                  name: Upgrade to Buy
                  order: 10
                - id: 143
                  code: UP
                  name: Underperform
                  order: 11
    post:
      tags:
        - 後台 > 評等
      summary: create new rate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 強力買進
                code:
                  type: string
                  example: SB
                order:
                  type: integer
                  example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/rate/{id}:
    get:
      tags:
        - 後台 > 評等
      summary: get rate by id
      security:
        - noauthAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required]'
          example: '133'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/company-all:
    get:
      tags:
        - 後台 > 公司
      summary: get all company
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/company:
    get:
      tags:
        - 後台 > 公司
      summary: get company paging
      security:
        - noauthAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
      responses:
        undefined:
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 30
                totalCount: 1788
                data:
                  - id: 10729
                    code: '1101'
                    name: 台泥
                    industry: 644
                  - id: 10730
                    code: '1102'
                    name: 亞泥
                    industry: 644
                  - id: 10731
                    code: '1103'
                    name: 嘉泥
                    industry: 644
                  - id: 10732
                    code: '1104'
                    name: 環泥
                    industry: 644
                  - id: 10733
                    code: '1108'
                    name: 幸福
                    industry: 644
                  - id: 10734
                    code: '1109'
                    name: 信大
                    industry: 644
                  - id: 10735
                    code: '1110'
                    name: 東泥
                    industry: 644
                  - id: 10736
                    code: '1201'
                    name: 味全
                    industry: null
                  - id: 10737
                    code: '1203'
                    name: 味王
                    industry: null
                  - id: 10738
                    code: '1210'
                    name: 大成
                    industry: null
                  - id: 10739
                    code: '1213'
                    name: 大飲
                    industry: null
                  - id: 10740
                    code: '1215'
                    name: 卜蜂
                    industry: null
                  - id: 10741
                    code: '1216'
                    name: 統一
                    industry: null
                  - id: 10742
                    code: '1217'
                    name: 愛之味
                    industry: null
                  - id: 10743
                    code: '1218'
                    name: 泰山
                    industry: null
                  - id: 10744
                    code: '1219'
                    name: 福壽
                    industry: null
                  - id: 10745
                    code: '1220'
                    name: 台榮
                    industry: null
                  - id: 10746
                    code: '1225'
                    name: 福懋油
                    industry: null
                  - id: 10747
                    code: '1227'
                    name: 佳格
                    industry: null
                  - id: 10748
                    code: '1229'
                    name: 聯華
                    industry: null
                  - id: 10749
                    code: '1231'
                    name: 聯華食
                    industry: null
                  - id: 10750
                    code: '1232'
                    name: 大統益
                    industry: null
                  - id: 10751
                    code: '1233'
                    name: 天仁
                    industry: 648
                  - id: 10752
                    code: '1234'
                    name: 黑松
                    industry: null
                  - id: 10753
                    code: '1235'
                    name: 興泰
                    industry: null
                  - id: 10754
                    code: '1236'
                    name: 宏亞
                    industry: null
                  - id: 10755
                    code: '1240'
                    name: 茂生農經
                    industry: null
                  - id: 10756
                    code: '1256'
                    name: 鮮活果汁-KY
                    industry: null
                  - id: 10757
                    code: '1258'
                    name: 其祥-KY
                    industry: null
                  - id: 10758
                    code: '1259'
                    name: 安心
                    industry: 648
    post:
      tags:
        - 後台 > 公司
      summary: create new company
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - code
                - industry
              properties:
                name:
                  type: string
                  description: 公司名稱
                  example: 台泥
                code:
                  type: integer
                  description: 股票代碼
                  example: '1101'
                industry:
                  type: integer
                  description: '產業 id '
                  example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/company/{id}:
    get:
      tags:
        - 後台 > 公司
      summary: get company by id
      security:
        - noauthAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '10729'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 10729
                code: '1101'
                name: 台泥
                industry: 644
  /api/dashboard/industry:
    get:
      tags:
        - 後台 > 產業
      summary: get all industrty
      security:
        - noauthAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 613
                  name: 半導體
                - id: 614
                  name: IC設計
                - id: 615
                  name: 車用
    post:
      tags:
        - 後台 > 產業
      summary: 建立新產業
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: 產業名稱
                  example: 博弈
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 664
                name: 博弈
                updatedAt: '2023-11-22T18:40:47.277Z'
                createdAt: '2023-11-22T18:40:47.277Z'
  /api/dashboard/industry/{id}:
    get:
      tags:
        - 後台 > 產業
      summary: get industry by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] 產業id'
          example: '660'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 660
                name: 音訊
                createdAt: '2023-10-30T08:38:21.000Z'
                updatedAt: '2023-10-30T08:38:21.000Z'
  /api/dashboard/pdf:
    get:
      tags:
        - 後台 > pdf
      summary: find pdf paging
      description: find pdf by filter \\n date format should be '2023-04-14T00:00:00.000Z'
      security:
        - noauthAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          example: '1'
        - name: rate
          in: query
          schema:
            type: string
          example: SB
        - name: securitiesFirms
          in: query
          schema:
            type: integer
          example: '260'
        - name: industry
          in: query
          schema:
            type: integer
          example: '660'
        - name: company
          in: query
          schema:
            type: integer
          example: '10729'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - 後台 > pdf
      summary: upload pdf
      description: >-
        使用 AWS SDK、REST API 或 AWS CLI 在單一操作中上傳物件 – 透過單一 PUT 操作，您最多可以上傳最大 5 GB
        的單一物件。
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - 後台 > pdf
      summary: delete pdfs
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/pdf-all:
    get:
      tags:
        - 後台 > pdf
      summary: find pdf all
      description: find pdf by filter \\n date format should be '2023-04-14T00:00:00.000Z'
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/pdf-bulk-upload:
    post:
      tags:
        - 後台 > pdf
      summary: upload pdf bulk
      description: >-
        使用 AWS SDK、REST API 或 AWS CLI 在單一操作中上傳物件 – 透過單一 PUT 操作，您最多可以上傳最大 5 GB
        的單一物件。
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/pdf/rename:
    post:
      tags:
        - 後台 > pdf
      summary: pdf rename
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - oldName
                - newName
              properties:
                oldName:
                  type: string
                  description: ''
                  example: 6488環球晶 元富 20230504 SB.pdf
                newName:
                  type: string
                  description: ''
                  example: 6488環球晶 元富 20230504 SBSS.pdf
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/presigned:
    post:
      tags:
        - 後台 > pdf
      summary: presigned url
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: ''
                  example: 2330台積電 野村 20230414 SB.pdf
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/securities-firms:
    get:
      tags:
        - 後台 > 卷商
      summary: get all firms
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - 後台 > 卷商
      summary: create a new security firm
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: ''
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/dashboard/securities-firms/{id}:
    get:
      tags:
        - 後台 > 卷商
      summary: get firm by id
      security:
        - noauthAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] firm id'
          example: '260'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/topic:
    get:
      tags:
        - 標籤、主題
      summary: 前臺 get topics with tags
      parameters:
        - name: showHiddenTag
          in: query
          schema:
            type: boolean
          description: |-
            [ true, false ] 
            若為 true 將回傳 hide 為 true 的 tag。
            預設為 false。
          example: 'true'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    name: 產業
                    tags:
                      - id: 1
                        name: 半導體
                        sort: 0
                        hide: false
                      - id: 2
                        name: IC 設計
                        sort: 1
                        hide: false
                  - id: 2
                    name: 總經
                    tags:
                      - id: 16
                        name: 總經
                        sort: 0
                        hide: false
                      - id: 17
                        name: 美元
                        sort: 1
                        hide: false
  /api/topic/industry-tags:
    get:
      tags:
        - 標籤、主題
      summary: 前臺 get Industry tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  name: 產業
                  tags:
                    - id: 1
                      name: 半導體
                      sort: 0
                      hide: false
                    - id: 2
                      name: IC 設計
                      sort: 1
                      hide: false
                    - id: 3
                      name: 車用
                      sort: 2
                      hide: false
                    - id: 4
                      name: 綠能
                      sort: 3
                      hide: false
                    - id: 5
                      name: 充電樁
                      sort: 4
                      hide: false
                    - id: 6
                      name: AI
                      sort: 5
                      hide: false
                    - id: 7
                      name: 工具機
                      sort: 6
                      hide: false
                    - id: 8
                      name: 資安
                      sort: 7
                      hide: false
                    - id: 9
                      name: 檢測
                      sort: 8
                      hide: false
                    - id: 10
                      name: IPC
                      sort: 9
                      hide: false
                    - id: 11
                      name: 記憶體
                      sort: 10
                      hide: false
                    - id: 12
                      name: 生技
                      sort: 11
                      hide: false
                    - id: 13
                      name: 航天軍工
                      sort: 12
                      hide: false
                    - id: 14
                      name: 導線架
                      sort: 13
                      hide: false
                    - id: 15
                      name: 電源供應器
                      sort: 14
                      hide: false
  /api/dashboard/tag:
    get:
      tags:
        - 標籤、主題
      summary: 後臺 get tags with topics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    name: 半導體
                    sort: 0
                    hide: false
                    topic:
                      id: 1
                      name: 產業
                  - id: 2
                    name: IC 設計
                    sort: 1
                    hide: false
                    topic:
                      id: 1
                      name: 產業
                  - id: 3
                    name: 車用
                    sort: 2
                    hide: false
                    topic:
                      id: 1
                      name: 產業
    post:
      tags:
        - 標籤、主題
      summary: 後台 新增標籤
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - topicId
                - isRecommended
              properties:
                name:
                  type: string
                  description: ''
                  example: 布林通道123
                topicId:
                  type: integer
                  description: topic 類的 id
                  example: '1'
                sort:
                  type: integer
                  description: 'integer, default: 0'
                  example: '5'
                hide:
                  type: boolean
                  description: 'boolean, defult: false'
                  example: 'true'
                isRecommended:
                  type: boolean
                  description: boolean
                  example: 'true'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 719
                  name: 布林通道
                  sort: '5'
                  hide: true
                  topicId: '1'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: not found
  /api/dashboard/topic:
    get:
      tags:
        - 標籤、主題
      summary: 後臺 get all topic with tag
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    name: 產業
                    tags:
                      - id: 1
                        name: 半導體
                        sort: 0
                        hide: false
                      - id: 2
                        name: IC 設計
                        sort: 1
                        hide: false
                  - id: 2
                    name: 總經
                    tags:
                      - id: 16
                        name: 總經
                        sort: 0
                        hide: false
                      - id: 17
                        name: 美元
                        sort: 1
                        hide: false
  /api/dashboard/tag/search:
    get:
      tags:
        - 標籤、主題
      summary: tag 名稱搜尋
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          schema:
            type: string
          example: 消費
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '92'
            ETag:
              schema:
                type: string
                example: W/"5c-IqTgW530YxeHCzz9USwxxBc/UiQ"
            Date:
              schema:
                type: string
                example: Thu, 23 Nov 2023 17:08:42 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 24
                    name: 消費者信心指數
                  - id: 25
                    name: 消費者物價指數
  /api/dashboard/tag/{id}:
    put:
      tags:
        - 標籤、主題
      summary: 後台 update tag
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - topicId
                - isRecommended
              properties:
                name:
                  type: string
                  description: string
                  example: 布林通道123
                topicId:
                  type: integer
                  description: integer
                  example: '1'
                sort:
                  type: integer
                  description: 'integer, default: 0'
                  example: '0'
                hide:
                  type: boolean
                  description: 'boolean, defult: false'
                  example: 'true'
                isRecommended:
                  type: boolean
                  description: boolean
                  example: 'false'
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '808'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 719
                  name: 布林通道123
                  sort: '5'
                  hide: true
                  topicId: '1'
                  topic:
                    id: 1
                    name: 產業
    delete:
      tags:
        - 標籤、主題
      summary: 後台 刪除標籤
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '719'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  message: success
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  code: 404
                  name: NotFoundError
                  message: 無法獲取 tag 資源
                  field: tag
  /api/tag/recommand:
    get:
      tags:
        - 標籤、主題
      summary: 前台拿到推薦 tag
      security:
        - noauthAuth: []
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '213'
            ETag:
              schema:
                type: string
                example: W/"d5-QcknWfa7o0fzLZIXJTE8FQBifEI"
            Date:
              schema:
                type: string
                example: Sat, 25 Nov 2023 04:14:18 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 23
                    name: 個人消費支出
                    sort: 7
                    hide: false
                    topicId: 2
                  - id: 55
                    name: 法人
                    sort: 11
                    hide: false
                    topicId: 4
                  - id: 57
                    name: 總股東人數
                    sort: 13
                    hide: false
                    topicId: 4
  /api/banner:
    get:
      tags:
        - Banner
      summary: get Banner content
      description: |-
        type 是指資料類型， source 指某類型的來源(yt type source from which channel)

        article type:  
        0 -> podcast

        1 -> tiptap article

        2 -> youtube

        source:  
        null -> 文章、podcast

        1 -> 金玉峰 yt 頻道

        2 -> 股耐 yt 頻道
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 28
                    description: >-
                      新手也能懂的 Kotlin Collection
                      賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                      Collection 有關。Collection
                      簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                      List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                      團隊深知資料處理的重要性，在標準函式庫（Stan…
                    title: '28'
                    topics:
                      - id: 27
                        name: 基本面
                    author:
                      name: Rick
                      id: 2
                    tags: []
                    publishDate: '2023-11-23T05:54:35.000Z'
                    previewImage: null
                    type: 1
                    isLimited: false
                    source: null
                  - id: 25
                    description: >-
                      也能懂的 Kotlin Collection
                      賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                      Collection 有關。Collection
                      簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                      List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                      團隊深知資料處理的重要性，在標準函式庫（Stan…</
                    title: 你好
                    topics:
                      - id: 28
                        name: 籌碼
                      - id: 30
                        name: 其他
                    author:
                      name: Rick
                      id: 2
                    tags:
                      - id: 188
                        name: IPC
                      - id: 200
                        name: 非農就業
                    publishDate: '2023-11-23T04:13:01.000Z'
                    previewImage: null
                    type: 1
                    isLimited: false
                    source: null
                  - id: 19
                    description: >-
                      新手也能懂的 Kotlin Collection
                      賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                      Collection 有關。Collection
                      簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                      List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                      團隊深知資料處理的重要性，在標準函式庫（Stan…
                    title: '19'
                    topics:
                      - id: 27
                        name: 基本面
                      - id: 30
                        name: 其他
                    author:
                      name: Rick
                      id: 2
                    tags:
                      - id: 179
                        name: 半導體
                      - id: 200
                        name: 非農就業
                    publishDate: '2023-11-23T03:02:16.000Z'
                    previewImage: null
                    type: 1
                    isLimited: false
                    source: null
                  - id: 18
                    description: >-
                      新手也能懂的 Kotlin Collection
                      賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                      Collection 有關。Collection
                      簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                      List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                      團隊深知資料處理的重要性，在標準函式庫（Stan…
                    title: '18'
                    topics:
                      - id: 27
                        name: 基本面
                      - id: 30
                        name: 其他
                    author:
                      name: Rick
                      id: 2
                    tags:
                      - id: 179
                        name: 半導體
                      - id: 188
                        name: IPC
                      - id: 200
                        name: 非農就業
                    publishDate: '2023-11-23T03:01:18.000Z'
                    previewImage: null
                    type: 1
                    isLimited: false
                    source: null
                  - id: 17
                    description: >-
                      新手也能懂的 Kotlin Collection
                      賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                      Collection 有關。Collection
                      簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                      List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                      團隊深知資料處理的重要性，在標準函式庫（Stan…
                    title: '17'
                    topics:
                      - id: 27
                        name: 基本面
                      - id: 30
                        name: 其他
                    author:
                      name: Rick
                      id: 2
                    tags:
                      - id: 179
                        name: 半導體
                      - id: 200
                        name: 非農就業
                    publishDate: '2023-11-23T03:01:02.000Z'
                    previewImage: null
                    type: 1
                    isLimited: false
                    source: null
  /api/news:
    get:
      tags:
        - 新聞
      summary: 新聞列表
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 新聞列表-if db
                  value:
                    data:
                      - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                        time: '2023-05-02T00:00:00.000Z'
                        link: >-
                          https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                        rate: 0
                        tag:
                          name: 半導體
                          id: 123
                      - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                        time: '2023-05-02T00:00:00.000Z'
                        link: >-
                          https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                        rate: 0
                        tag:
                          name: 半導體
                          id: 123
                example-1:
                  summary: 新聞列表 -if not save in db
                  value:
                    data:
                      - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                        time: '2023-05-02T00:00:00.000Z'
                        link: >-
                          https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                        rate: 0
                        tag: 半導體
                      - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                        time: '2023-05-02T00:00:00.000Z'
                        link: >-
                          https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                        rate: 0
                        tag: 半導體
  /api/search/query:
    get:
      tags:
        - 搜尋
      summary: query
      parameters:
        - name: q
          in: query
          schema:
            type: string
          required: true
          description: ''
          example: 世界
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
        - name: topic
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1246'
            ETag:
              schema:
                type: string
                example: W/"4de-R5rEWY8hwf5PrJL5gO6BxN2Ll/8"
            Date:
              schema:
                type: string
                example: Mon, 27 Nov 2023 10:14:06 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  currentPage: 0
                  pageSize: 30
                  totalCount: 1
                  totalPage: 1
                  articles:
                    - id: 2
                      title: 你好，世界
                      description: >-
                        新手也能懂的 Kotlin Collection
                        賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                        Collection 有關。Collection
                        簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                        List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                        團隊深知資料處理的重要性，在標準函式庫（Stan…
                      author:
                        name: Rick
                        id: 2
                      companies: []
                      topics:
                        - id: 3
                          name: 基本面
                        - id: 4
                          name: 籌碼面
                        - id: 5
                          name: 技術面
                      tags:
                        - id: 1
                          name: 半導體
                          isRecommended: false
                        - id: 2
                          name: IC 設計
                          isRecommended: false
                      publishDate: '2023-11-22T16:11:23.000Z'
                      previewImage:
                        id: 1
                        url: >-
                          https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                          (1).png
                      type: 1
                      isLimited: false
                      source: null
  /api/search/author:
    get:
      tags:
        - 搜尋
      summary: author
      parameters:
        - name: author
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '2'
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
        - name: topic
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1190'
            ETag:
              schema:
                type: string
                example: W/"4a6-qpjajLEqKNAy3l5qsAmpTR5TEp0"
            Date:
              schema:
                type: string
                example: Mon, 27 Nov 2023 10:14:54 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  currentPage: 0
                  pageSize: 30
                  totalCount: 1
                  totalPage: 1
                  articles:
                    - id: 2
                      title: 你好，世界
                      description: >-
                        新手也能懂的 Kotlin Collection
                        賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                        Collection 有關。Collection
                        簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                        List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                        團隊深知資料處理的重要性，在標準函式庫（Stan…
                      author:
                        name: Rick
                        id: 2
                      companies: []
                      topics:
                        - id: 3
                          name: 基本面
                      tags:
                        - id: 1
                          name: 半導體
                          isRecommended: false
                        - id: 2
                          name: IC 設計
                          isRecommended: false
                      publishDate: '2023-11-22T16:11:23.000Z'
                      previewImage:
                        id: 1
                        url: >-
                          https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                          (1).png
                      type: 1
                      isLimited: false
                      source: null
  /api/search/tag:
    get:
      tags:
        - 搜尋
      summary: get by tag
      parameters:
        - name: tag
          in: query
          schema:
            type: integer
          required: true
          description: tag id
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
        - name: topic
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1246'
            ETag:
              schema:
                type: string
                example: W/"4de-R5rEWY8hwf5PrJL5gO6BxN2Ll/8"
            Date:
              schema:
                type: string
                example: Mon, 27 Nov 2023 10:15:41 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  currentPage: 0
                  pageSize: 30
                  totalCount: 1
                  totalPage: 1
                  articles:
                    - id: 2
                      title: 你好，世界
                      description: >-
                        新手也能懂的 Kotlin Collection
                        賞玩門道在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                        Collection 有關。Collection
                        簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                        List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。Kotlin
                        團隊深知資料處理的重要性，在標準函式庫（Stan…
                      author:
                        name: Rick
                        id: 2
                      companies: []
                      topics:
                        - id: 3
                          name: 基本面
                        - id: 4
                          name: 籌碼面
                        - id: 5
                          name: 技術面
                      tags:
                        - id: 1
                          name: 半導體
                          isRecommended: false
                        - id: 2
                          name: IC 設計
                          isRecommended: false
                      publishDate: '2023-11-22T16:11:23.000Z'
                      previewImage:
                        id: 1
                        url: >-
                          https://jin-yu-feng-file-bucket.s3.ap-northeast-1.amazonaws.com/1700385855903-sticker
                          (1).png
                      type: 1
                      isLimited: false
                      source: null
  /api/search/title:
    get:
      tags:
        - 搜尋
      summary: search by title
      security:
        - noauthAuth: []
      parameters:
        - name: q
          in: query
          schema:
            type: string
          required: true
          description: ''
          example: 標題
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '145'
            ETag:
              schema:
                type: string
                example: W/"91-RIWeeHJLVtQDmDh7egvN8+w32tc"
            Date:
              schema:
                type: string
                example: Mon, 27 Nov 2023 10:27:20 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - title: 標題
                    id: 27
                  - title: 標題
                    id: 26
                  - title: 標題
                    id: 16
                  - title: 標題
                    id: 13
                  - title: 標題
                    id: 10
  /api/subscription/latest-plan:
    get:
      tags:
        - 訂閱
      summary: 取得會員訂閱狀態
      description: |-
        1\. 訂閱狀態 `status`:

        - 訂閱中 `active`
        - 已取消 `canceled`
        - 已關閉自動續訂 `renewal_disabled`
            

        2\. 判斷是否在訂閱資格期間：以回傳欄位 `isSubscribing` 為準

        3\. 是否已退款：以 `isRefunded` 欄位為準
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 使用者訂閱中
                  value:
                    data:
                      id: 3
                      memberId: 5
                      isSubscribing: true
                      status: active
                      plan: month
                      amount: 6888
                      email: test@gnim.com
                      nextRenewalDate: '2023-12-04'
                      startAt: '2023-11-04T10:10:47.000Z'
                      endAt: null
                      companyUniformSerialNo: '12345678'
                      maskedCreditCardNo: 400022******1111
                      createdAt: '2023-11-04T10:05:47.000Z'
                      updatedAt: '2023-11-04T10:05:47.000Z'
                example-1:
                  summary: 使用者取消訂閱，未退款未到期
                  value:
                    data:
                      id: 3
                      memberId: 5
                      isSubscribing: true
                      isRefunded: false
                      status: canceled
                      plan: month
                      amount: 6888
                      email: test@gnim.com
                      nextRenewalDate: '2023-12-04'
                      startAt: '2023-11-04T10:10:47.000Z'
                      endAt: null
                      canceledAt: '2023-11-10T10:10:47.000Z'
                      refundedAt: null
                      companyUniformSerialNo: '12345678'
                      maskedCreditCardNo: 400022******1111
                      createdAt: '2023-11-04T10:05:47.000Z'
                      updatedAt: '2023-11-04T10:05:47.000Z'
                example-2:
                  summary: 使用者取消訂閱，已退款已到期
                  value:
                    data:
                      id: 3
                      memberId: 5
                      isSubscribing: false
                      isRefunded: true
                      status: canceled
                      plan: month
                      amount: 6888
                      email: test@gnim.com
                      nextRenewalDate: '2023-12-04'
                      startAt: '2023-11-04T10:10:47.000Z'
                      endAt: '2023-11-04T10:10:47.000Z'
                      canceledAt: '2023-11-10T10:10:47.000Z'
                      refundedAt: '2023-11-11T10:10:47.000Z'
                      companyUniformSerialNo: '12345678'
                      maskedCreditCardNo: 400022******1111
                      createdAt: '2023-11-04T10:05:47.000Z'
                      updatedAt: '2023-11-04T10:05:47.000Z'
                example-3:
                  summary: 使用者目前未訂閱
                  value:
                    data: null
  /api/subscription/bills:
    get:
      tags:
        - 訂閱
      summary: 取得付款紀錄
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 30
                totalCount: 515
                data:
                  - id: 14
                    memberId: 5
                    subscriptionId: 3
                    plan: month
                    type: payment
                    startAt: '2023-11-04T10:10:47.000Z'
                    endAt: '2023-12-04T10:10:47.000Z'
                    amount: 6888
                    taxAmount: 300
                    maskedCreditCardNo: 400022******1111
                    createdAt: '2023-11-04T10:05:47.000Z'
                  - id: 6
                    memberId: 5
                    subscriptionId: 3
                    plan: month
                    type: payment
                    startAt: '2023-10-04T10:10:47.000Z'
                    endAt: '2023-11-04T10:10:47.000Z'
                    amount: 6888
                    taxAmount: 300
                    maskedCreditCardNo: 400022******1111
                    createdAt: '2023-10-04T10:05:47.000Z'
  /api/subscription/request-payment-payload:
    post:
      tags:
        - 訂閱
      summary: 要求藍新付款  (使用者確認付款)
      description: >-
        Request 參數：


        1. \* plan: 訂閱方案, valid inputs: \["month", "quarter", "year"\]

        2. \* returnUrl: 完成藍新付款後要前往的前端 URL

        3. \* backUrl: 取消付款後要前往的前端 URL
            
        4. companyUniformSerialNo: 公司發票統編
            

        Response：將兩個回傳參數直接以 POST Form 表單帶往藍新的付款 URL  

        藍新測試站：[https://ccore.newebpay.com/MPG/period](https://ccore.newebpay.com/MPG/period)  

        藍新正式站：[https://core.newebpay.com/MPG/period](https://core.newebpay.com/MPG/period)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                plan: month
                companyUniformSerialNo: '12345678'
                returnUrl: https://gnim.com.tw/payment-completed
                backUrl: https://gnim.com.tw/payment-canceled
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  MerchantID_: MS350610354
                  PostData_: >-
                    fc22f8e6a80a8b168d990de07bb43dcf892da53d99a8a2cb1a4700c9ae26c4a2cdbfea96bdb02628359bdbcbe04c162f3182a0c434139330c073f22b11466143809966b521656e16f6a1f420492d860d992248eafc709e3aa70479ecf73f9f31ff3c509b82e1dc04f7a8a129a89eac69c61ada86d536dbfc9ce7dbb2e024b14677b3752bbc9fafd7d598b88321a72e8a54a9bbe7b93db91a9ecc87480d3ff6b497cd0801c21e6c2ad3cd78f9a434955c974845e59d1ec93415fac7ca7dfae2073deca4a978841ee96960fb28eee82b0102b7be84362d2f1e1c8091ab9a2e7c31d0b4865c3244b7fa8911b1b5a5323cda71467e986d270c32fe5cbaf976efd74a7b56ff9e7eab97e5e0979ee3f2b2c200993b9656ca7f6a88c06977d4abd6c30799ca90ca4051255855693a81ba98cbd0ee3d324cbadd8c7368530e9f3b0dbe1959db96506b9505d47a3a3f309569578e
  /api/subscription/re-request-payment-payload:
    post:
      tags:
        - 訂閱
      summary: 重新要求藍新付款 (更新付款資料)
      description: |-
        參數幾乎同「要求藍新付款」，

        此 API 不同的地方在於用途，  
        當使用者已經有一筆有效的訂閱資格，但要更改付款資訊、Email 時，使用此 API，  
        更新付款資訊不允許更換方案，因此 Request 不需傳入 `plan` 參數。

        companyUniformSerialNo 統編欄位，如不傳入，預設沿用上一筆訂閱設定，如傳入 null，代表新的訂閱資料不使用統編。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                companyUniformSerialNo: '12345678'
                returnUrl: https://gnim.com.tw/payment-completed
                backUrl: https://gnim.com.tw/payment-canceled
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/subscription/change-plan:
    post:
      tags:
        - 訂閱
      summary: 更換方案
      description: 用來讓使用者更換方案，更換後回傳新的訂閱資訊。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                newPlan: quarter
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 3
                  memberId: 5
                  status: subscription-status-string
                  plan: quarter
                  autoRenewal: true
                  amount: 16888
                  email: test@gnim.com
                  nextRenewalDate: '2024-02-04'
                  startAt: '2023-11-04T10:10:47.000Z'
                  endAt: null
                  companyUniformSerialNo: '12345678'
                  maskedCreditCardNo: 400022******1111
                  createdAt: '2023-11-04T10:05:47.000Z'
                  updatedAt: '2023-11-04T10:05:47.000Z'
  /api/subscription/configure-auto-renewal:
    post:
      tags:
        - 訂閱
      summary: 啟用或關閉自動續訂
      description: |-
        參數：

        1. `active`: boolean，是否啟用自動續訂
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                active: true
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 3
                  memberId: 5
                  status: subscription-status-string
                  plan: month
                  autoRenewal: false
                  amount: 6888
                  email: test@gnim.com
                  nextRenewalDate: '2023-12-04'
                  startAt: '2023-11-04T10:10:47.000Z'
                  endAt: null
                  companyUniformSerialNo: '12345678'
                  maskedCreditCardNo: 400022******1111
                  createdAt: '2023-11-04T10:05:47.000Z'
                  updatedAt: '2023-11-04T10:05:47.000Z'
  /api/subscription/cancel-and-request-refund:
    post:
      tags:
        - 訂閱
      summary: 取消訂閱
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/pdf/trial:
    get:
      tags:
        - 試閱
      summary: get trial pdf link
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data: >-
                  https://jing-yu-feng-pdf-bucket.s3.ap-northeast-1.amazonaws.com/trial.pdf
  /api/media:
    get:
      tags:
        - 媒體影音
      summary: get media by type
      parameters:
        - name: source
          in: query
          schema:
            type: string
          required: true
          description: |-
            string
            gnimPodcast -> podcast
            jinyufengYt -> yt
          example: jinyufengYt
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  currentPage: 0
                  pageSize: 30
                  totalCount: 474
                  totalPage: 16
                  media:
                    - id: 1
                      title: >-
                        【雷老闆】節目《從0鑽豹》｜日報《雷老闆雷霆鑽豹》｜看盤軟體《股海羅盤》｜金玉峰投資證券顧問股份有限公司【服務專線
                        04-22914915】
                      youtubeId: Fk5oo33amsM
                      previewImage: https://i.ytimg.com/vi/Fk5oo33amsM/hqdefault.jpg
                      description: >-
                        關注雷老闆，讓你從0鑽豹
                        #智富月刊專訪:https://www.youtube.com/watch?v=JXZXEoLpT48
                        #Money錢 ...
                      publishedAt: '2023-11-27T09:25:38.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 2
                      title: >-
                        20231127 1500
                        雷老闆《從0鑽豹》【肺炎回來了？醫療類股怎麼看？萬7大震盪，留下來或我跟你走？】服務諮詢專線（04）2291-4915
                      youtubeId: nKVPSPJe8Cc
                      previewImage: https://i.ytimg.com/vi/nKVPSPJe8Cc/hqdefault.jpg
                      description: >-
                        投資不迷路  老闆幫你顧！！ 黑色星期五銷售創佳績  
                        「黑色星期五」感恩購物節登場，優惠的折扣吸引消費者，成功締造98億 ...
                      publishedAt: '2023-11-27T07:02:21.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 3
                      title: >-
                        20231124 1500 股市金玉峰 KEN 直播第 822
                        集【四九流年運不通！！！當記斯言必無凶！！！】｜雷老闆《從0鑽豹》【綠能產業大噴發你上車了嗎？】服務諮詢專線（04）2291-4915
                      youtubeId: aZ97X06tXE8
                      previewImage: https://i.ytimg.com/vi/aZ97X06tXE8/hqdefault.jpg
                      description: >-
                        PC／NB／手機／雙D（４５） ＃哥的最後一堂課11/25台中#哥祝大家操作順心賺大錢！！！
                        KEN六脈神劍不傳絕學～緣起緣滅～ ...
                      publishedAt: '2023-11-24T08:49:29.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 4
                      title: >-
                        20231123 1500 股市金玉峰 KEN 直播第 821 集【聯發科狂飆 6485
                        漲停！！】｜雷老闆《從0鑽豹》【櫃買回新高，台股萬7震盪，你受得了嗎？】服務諮詢專線（04）2291-4915
                      youtubeId: s75yYlstwgg
                      previewImage: https://i.ytimg.com/vi/s75yYlstwgg/hqdefault.jpg
                      description: >-
                        ＩＣ設計還是ＩＣ設計！！！ PC／NB／手機／雙D（４４）
                        ＃哥的最後一堂課11/25台中#哥祝大家操作順心賺大錢！！！ KEN六脈 ...
                      publishedAt: '2023-11-23T08:35:48.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 5
                      title: >-
                        20231122
                        1500股市金玉峰KEN直播第820集【2454千元之約～】｜雷老闆《從0鑽豹》【Nvidia財報公告，說好的大漲呢？我又被套在高點嗎...？】服務諮詢專線（04）2291-4915
                      youtubeId: hjqS7nW5Xws
                      previewImage: https://i.ytimg.com/vi/hjqS7nW5Xws/hqdefault.jpg
                      description: >-
                        叫我ＩＣ設計王！！！ PC／NB／手機／雙D（４３）
                        ＃哥的最後一堂課11/25台中#哥祝大家操作順心賺大錢！！！ KEN六脈神劍不 ...
                      publishedAt: '2023-11-22T08:31:04.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 6
                      title: >-
                        20231121 1500 股市金玉峰 KEN 直播第 819 集【900ㄟ 1000
                        倒數了！！！】｜雷老闆《從0鑽豹》【台股回萬7，做夢行情怎麼看？】服務諮詢專線（04）2291-4915
                      youtubeId: x8SvEfYxCoo
                      previewImage: https://i.ytimg.com/vi/x8SvEfYxCoo/hqdefault.jpg
                      description: >-
                        叫我ＩＣ設計王！！！ PC／NB／手機／雙D（４２）
                        ＃哥的最後一堂課11/25台中#哥祝大家操作順心賺大錢！！！ KEN六脈神劍不 ...
                      publishedAt: '2023-11-21T08:47:43.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 7
                      title: >-
                        【產業回溫，矽晶圓底部翻揚？矽晶圓產業終迎反轉契機？】雷老闆《從0鑽豹》直播，服務諮詢專線（04）2291-4915－20231102
                      youtubeId: zlQp9KmK8kI
                      previewImage: https://i.ytimg.com/vi/zlQp9KmK8kI/hqdefault.jpg
                      description: >-
                        公告：本節目14:59~16:55 VCR標題更正為「穩懋漲停送幸福」特此公告！ 00:00 開始01:15
                        開頭01:47 日報、11/18分享見面 ...
                      publishedAt: '2023-11-02T20:31:42.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 8
                      title: >-
                        20231025 1500 股市金玉峰 KEN 直播第 800 集【16163 破
                        16182，週MA2＝16061 撐起來 （２）】服務諮詢專線（04）2291-4915
                      youtubeId: B-UeNlEaRnE
                      previewImage: https://i.ytimg.com/vi/B-UeNlEaRnE/hqdefault.jpg
                      description: >-
                        祥碩漲停板，我的ＩＣ設計股!! PC／NB／手機／雙D＆BDI （２４）
                        羅盤１＋１＋上課（11/19台北、11/25台中） 羅盤祝大家操作 ...
                      publishedAt: '2023-10-25T08:25:59.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 9
                      title: >-
                        20230912 1500 股市金玉峰 KEN 直播第 772 集【本週觀週 MA3
                        攤牌（３）】服務諮詢專線（04）2291-4915
                      youtubeId: vzqhT0pxoZc
                      previewImage: https://i.ytimg.com/vi/vzqhT0pxoZc/hqdefault.jpg
                      description: >-
                        緯創、廣達、創意、緯穎明有低搶！！！ ＡＩ南下列車～祝大家賺大錢！！！ 生技MA2 、MA3、MA4
                        壓力賣（１０） PC／NB／ ...
                      publishedAt: '2023-09-12T09:41:10.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 10
                      title: >-
                        20230906 1500 股市金玉峰 KEN 直播第 768 集【本週觀週 MA１壓
                        （３）】服務諮詢專線（04）2291-4915
                      youtubeId: 1iGuL3nIoC4
                      previewImage: https://i.ytimg.com/vi/1iGuL3nIoC4/hqdefault.jpg
                      description: >-
                        ＡＩ融資６０萬張的省思～ ９月選股選健康！！！ 生技MA2 、MA3、MA4 壓力賣（６） 美元站上MA2
                        週攻擊關卡價！！！ 別再 ...
                      publishedAt: '2023-09-06T09:51:01.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 11
                      title: >-
                        20230901 1500 股市金玉峰 KEN 直播第 765 集【大盤 MA3
                        支撐反彈幾天（１３）】服務諮詢專線（04）2291-4915
                      youtubeId: 5vk7yWWs4z4
                      previewImage: https://i.ytimg.com/vi/5vk7yWWs4z4/hqdefault.jpg
                      description: >-
                        ８月ＡＩ做頭！！！ ９月新主流跳出來！！！ 祝大家週末愉快！！！ 生技MA2 、MA3、MA4 壓力賣（３）
                        ９月健康權值股站起來 ...
                      publishedAt: '2023-09-01T09:36:31.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 12
                      title: >-
                        20230821 1500 股市金玉峰 KEN 直播第 757 集【大盤 MA3
                        支撐反彈幾天（５）】服務諮詢專線（04）2291-4915
                      youtubeId: SaEFTgSJZJw
                      previewImage: https://i.ytimg.com/vi/SaEFTgSJZJw/hqdefault.jpg
                      description: >-
                        ＡＩ第１次雙陰買訊！！！ ＡＩ鏈南下列車／突擊兵作戰！！！ 生技MA1 壓加減賣！！！
                        預告：藥華藥MA3、MA6 壓力賣！
                      publishedAt: '2023-08-21T09:11:32.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 13
                      title: >-
                        20230816 1500 股市金玉峰 KEN 直播第 754 集【大盤 MA3
                        支撐反彈幾天（２）】服務諮詢專線（04）2291-4915
                      youtubeId: '--ggOKBGSE4'
                      previewImage: https://i.ytimg.com/vi/--ggOKBGSE4/hqdefault.jpg
                      description: >-
                        ＡＩ今敗，明報仇！！！ 藥華藥漲停321.5 遲來的正義！！！ 8/14 抄底部位賣！！！
                        ＡＩ鏈南下列車／突擊兵作戰！！！ ＃活到老 ...
                      publishedAt: '2023-08-16T08:38:00.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 14
                      title: >-
                        20230814 1500 股市金玉峰 KEN 直播第 752 集【大盤 16000
                        點先來／驗證！！！】服務諮詢專線（04）2291-4915
                      youtubeId: 66qe22wM0i8
                      previewImage: https://i.ytimg.com/vi/66qe22wM0i8/hqdefault.jpg
                      description: >-
                        台積電537 元／半年線驗證！！！ 長聖MA8 參數沒到價／沒買到第4/9 部位！！！反彈180～182
                        先賣再來低買！！！ ＡＩ鏈南下 ...
                      publishedAt: '2023-08-14T08:43:07.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 15
                      title: >-
                        20230811 1630 虎膽妙算/股海羅盤 KEN 直播第 597
                        集【藥華藥破底翻訊號】服務諮詢專線（04）2291-4915
                      youtubeId: zOETGN_kCbc
                      previewImage: https://i.ytimg.com/vi/zOETGN_kCbc/hqdefault.jpg
                      description: >-
                        不受後有，是什麼意思？！ ８月迄今９天當沖做４９單！！！ 鑽石當沖９天賺１６０萬５０００元( 未扣手續費)
                        ！！！ 翡翠當沖９ ...
                      publishedAt: '2023-08-11T10:01:40.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 16
                      title: >-
                        20230808 1630 虎膽妙算/股海羅盤 KEN 直播第 594
                        集【育世博掀生技市值排名大戰？！】服務諮詢專線（04）2291-4915
                      youtubeId: ZbaKj5lEoGQ
                      previewImage: https://i.ytimg.com/vi/ZbaKj5lEoGQ/hqdefault.jpg
                      description: >-
                        我身已盡，是什麼意思？！ ８月迄今６天當沖做２５單！！！ 鑽石當沖６天賺８１萬３０００元( 未扣手續費) ！！！
                        翡翠當沖６天 ...
                      publishedAt: '2023-08-08T10:16:51.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 17
                      title: >-
                        20230726 1630 虎膽妙算/股海羅盤 KEN 直播第 586 集【緯創 7/27
                        然後呢？！】服務諮詢專線（04）2291-4915
                      youtubeId: qYALsssonhI
                      previewImage: https://i.ytimg.com/vi/qYALsssonhI/hqdefault.jpg
                      description: >-
                        佛問圓通，我無選擇！！！ ７月１８天當沖做１５０單！！！ 鑽石當沖１８天賺３８１萬８０００元( 未扣手續費)
                        ！！！ 翡翠當 ...
                      publishedAt: '2023-07-26T10:06:44.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 18
                      title: >-
                        20230726 1500 股市金玉峰 KEN 直播第 740 集【電子 -0.63% VS 生技 -3.3%
                        】服務諮詢專線（04）2291-4915
                      youtubeId: uMXPPCaENNs
                      previewImage: https://i.ytimg.com/vi/uMXPPCaENNs/hqdefault.jpg
                      description: >-
                        保瑞6472 跌停！！！ 長佳6841 跌停！！！ 智原3035 跌停！！！ 緯創～明7/27 能平安出關嗎？
                        還是加重20 分鐘一盤？
                      publishedAt: '2023-07-26T08:19:17.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 19
                      title: >-
                        20230724 1500 股市金玉峰 KEN 直播第 738 集【電子 +0.42% V.S 生技
                        -0.16%】服務諮詢專線（04）2291-4915
                      youtubeId: MsLgznZ82gI
                      previewImage: https://i.ytimg.com/vi/MsLgznZ82gI/hqdefault.jpg
                      description: >-
                        華安6657 再度亮燈漲停！！！ 保瑞6472 收盤1010 元大千金！！！ ＃緯創下週四之前宣布分盤20
                        分鐘即是再空回時機！！！ ＃活 ...
                      publishedAt: '2023-07-24T08:25:49.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 20
                      title: >-
                        20230629 1630 虎膽妙算/股海羅盤 KEN 直播第 568
                        集【南韓季線保衛戰！！！】服務諮詢專線（04）2291-4915
                      youtubeId: YcsReEBgF0k
                      previewImage: https://i.ytimg.com/vi/YcsReEBgF0k/hqdefault.jpg
                      description: >-
                        長榮會填息？自營商狂掃貨！！！ 姐１９天當沖做177 單！！！ 鑽石當沖１９天賺３１０萬８０００元(
                        未扣手續費) ！！！ 翡翠當 ...
                      publishedAt: '2023-06-29T10:19:20.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 21
                      title: >-
                        20230629 1500 股市金玉峰 KEN 直播第 721 集【電子漲 0.2% V.S 生技 +1.8%
                        】服務諮詢專線（04）2291-4915
                      youtubeId: uTxLyQfCSik
                      previewImage: https://i.ytimg.com/vi/uTxLyQfCSik/hqdefault.jpg
                      description: >-
                        ２天大陸浪潮AI 股重挫19% ！！！ ＃歸隊！！！禮遇優惠最後２天！！！ １.舊會員續約KEN 哥哥禮遇專案(
                        全線多送２個月) 6/30 ...
                      publishedAt: '2023-06-29T07:57:48.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 22
                      title: >-
                        20230628 1500 股市金玉峰 KEN 直播第 720 集【電子漲 0.3% V.S 生技
                        +1.1%】服務諮詢專線（04）2291-4915
                      youtubeId: HdRv1oQROQI
                      previewImage: https://i.ytimg.com/vi/HdRv1oQROQI/hqdefault.jpg
                      description: >-
                        緯創廣達技嘉英業達創意世芯要割韭菜囉！！！ 歸隊！！！趨吉避凶！！！ １.舊會員續約KEN 哥哥禮遇專案(
                        全線多送２個月) 6/30 ...
                      publishedAt: '2023-06-28T07:52:57.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 23
                      title: >-
                        ​20230627 1330 股海羅盤/軟體教學 - 第 30
                        課【垃圾變黃金】服務諮詢專線（04）2291-4915
                      youtubeId: _ZG5NX1FFpI
                      previewImage: https://i.ytimg.com/vi/_ZG5NX1FFpI/hqdefault.jpg
                      description: >-
                        第30 課【＃垃圾變黃金】 02:11 申請進群組：股市金玉峰～程序06:45
                        垃圾變黃金主題開始＃接續之前的碳權議題，所謂的碳足跡， ...
                      publishedAt: '2023-06-27T18:13:16.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 24
                      title: >-
                        20230627 1630 虎膽妙算/股海羅盤 KEN 直播第 566 集【主人 ( EPS ) 與狗 ( 股價
                        ) 理論！！！】服務諮詢專線（04）2291-4915
                      youtubeId: GaYCfNDptIw
                      previewImage: https://i.ytimg.com/vi/GaYCfNDptIw/hqdefault.jpg
                      description: >-
                        日Ｋ週Ｋ月Ｋ一起跌就代誌大條了！！！ 姐１７天當沖做164 單！！！ 鑽石當沖１７天賺２８０萬元( 未扣手續費)
                        ！！！ 翡翠當 ...
                      publishedAt: '2023-06-27T09:51:21.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 25
                      title: >-
                        20230627 1500 股市金玉峰 KEN 直播第 719 集【電子跌 1.2% V.S 生技 +2.3%
                        要割散戶韭菜了！！！】服務諮詢專線（04）2291-4915
                      youtubeId: 7ziEhHcmQ1M
                      previewImage: https://i.ytimg.com/vi/7ziEhHcmQ1M/hqdefault.jpg
                      description: >-
                        歸隊！！！趨吉避凶！！！ １.舊會員續約KEN 哥哥禮遇專案( 全線多送２個月) 6/30 止！！！
                        ２.活到老學到老（六脈神劍） Ａ.
                      publishedAt: '2023-06-27T08:01:10.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 26
                      title: >-
                        20230626 1630 虎膽妙算/股海羅盤 KEN 直播第 565
                        集【保瑞力爭上游！！！藥王３天不創新低量！！！】服務諮詢專線（04）2291-4915
                      youtubeId: rCq7ILn3Cu8
                      previewImage: https://i.ytimg.com/vi/rCq7ILn3Cu8/hqdefault.jpg
                      description: >-
                        姐１６天當沖做154 單！！！ 鑽石當沖１６天賺２５６萬４０００元( 未扣手續費) ！！！
                        翡翠當沖１６天賺６７萬４０００元！
                      publishedAt: '2023-06-26T10:01:40.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 27
                      title: >-
                        20230626 1500 股市金玉峰 KEN 直播第 718 集【融資增幅 28.3% V.S 指數增幅
                        12% 】服務諮詢專線（04）2291-4915
                      youtubeId: vREONNiT3T4
                      previewImage: https://i.ytimg.com/vi/vREONNiT3T4/hqdefault.jpg
                      description: >-
                        先軋空後殺多！！！ 居高思危趨吉避凶！！！ １.舊會員續約KEN 哥哥禮遇專案( 全線多送２個月) 6/30
                        止！！！ ２.活到老學到老（ ...
                      publishedAt: '2023-06-26T08:04:06.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 28
                      title: >-
                        20230621 1430 股海羅盤/軟體教學 - 第 29
                        課【電動車產業】服務諮詢專線（04）2291-4915
                      youtubeId: oDkzlJw3TLw
                      previewImage: https://i.ytimg.com/vi/oDkzlJw3TLw/hqdefault.jpg
                      description: >-
                        第29 課【電動車產業】 ＃電動車核心產業全台灣2021 年至2022
                        年電動車交車量增加了128%，代表整體電動車產業準備開始進入 ...
                      publishedAt: '2023-06-21T18:00:16.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 29
                      title: >-
                        20230621 1630 虎膽妙算/股海羅盤 KEN 直播第 564
                        集【今年股市太畸型！！！】服務諮詢專線（04）2291-4915
                      youtubeId: _u6HyKjbN3w
                      previewImage: https://i.ytimg.com/vi/_u6HyKjbN3w/hqdefault.jpg
                      description: >-
                        端午節快樂！！！ 姐１５天當沖做143 單！！！ 鑽石當沖１５天賺２２９萬元( 未扣手續費) ！！！
                        翡翠當沖１５天賺６３萬元！
                      publishedAt: '2023-06-21T10:02:23.000Z'
                      source: jinyufengYt
                      type: youtube
                    - id: 30
                      title: >-
                        20230621 1500 股市金玉峰 KEN 直播第 717 集【美超微電腦跌 16%
                        的省思～】服務諮詢專線（04）2291-4915
                      youtubeId: sjk7geyEdc8
                      previewImage: https://i.ytimg.com/vi/sjk7geyEdc8/hqdefault.jpg
                      description: >-
                        聲明啟事：右邊側標應為【美超微跌18% 省思】，誤植為16%。 且節目中所提及之16% 皆應為【18%】。
                        對於【美超微電腦跌18% ...
                      publishedAt: '2023-06-21T08:07:10.000Z'
                      source: jinyufengYt
                      type: youtube
