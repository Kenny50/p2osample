openapi: 3.0.0
info:
  title: 金玉峰投顧 api
  description: 'fix api domain prefix '
  version: 11.17.1655
servers:
  - url: https://jinyufeng-dev-api.jinyufeng.com.tw
    description: dev
  - url: http://localhost:3020
    description: local
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: 會員
  - name: 文章
    description: |-
      type 是指資料類型， source 指某類型的來源(針對 youtube 類型，每個頻道都是一種 source)

      article type:  
      0 -> podcast, 1 -> tiptap article, 2 -> youtube, 3 -> news

      source:  
      null -> 文章、podcast, 0 -> 金玉峰 yt 頻道, 1 -> 股耐 yt 頻道

      topic:

      0->全部, 1 -> 基礎面, 2 -> 技術面,3 -> 籌碼面,4 -> 其他
  - name: 後台
  - name: 後台 > 文章
  - name: 後台 > 帳戶
  - name: 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
  - name: 後台 > 訂閱 & 發票
  - name: 搜尋
    description: |-
      type 是指資料類型， source 指某類型的來源(針對 youtube 類型，每個頻道都是一種 source)

      article type:  
      0 -> podcast, 1 -> tiptap article, 2 -> youtube, 3 -> news

      source:  
      null -> 文章、podcast, 0 -> 金玉峰 yt 頻道, 1 -> 股耐 yt 頻道

      topic:

      0->全部, 1 -> 基礎面, 2 -> 技術面,3 -> 籌碼面,4 -> 其他
  - name: 標籤、主題
  - name: Banner
  - name: 新聞
    description: rate, 1 -> positive, 0 -> neutral, -1 -> negative
  - name: 訂閱
paths:
  /api/login/google:
    post:
      tags:
        - 會員
      summary: google login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - idToken
              properties:
                idToken:
                  type: string
                  description: google response code in query
                  example: >-
                    4/0AfJohXk9x2EKbQRm5SOUDJHovEBlJaJZkvv7zZfd8bK3uFnwFp1FhSjwqPmz7pKbc6ES9A
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                name: uuid
                email: null
                accessToken: YOUR_ACCESS_TOKEN
                refreshToken: YOUR_REFRESH_TOKEN
  /api/auth/google:
    get:
      tags:
        - 會員
      summary: get auth google url
      description: 會重導向，沒有 response
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/line:
    post:
      tags:
        - 會員
      summary: line login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - idToken
              properties:
                idToken:
                  type: string
                  description: line id token
                  example: OLLNPSKK2Df8r3Amox7y
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                name: uuid
                email: null
                accessToken: YOUR_ACCESS_TOKEN
                refreshToken: YOUR_REFRESH_TOKEN
  /api/member/refresh-token:
    post:
      tags:
        - 會員
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: ''
                  example: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiMDE0NDM2OTItZTE0ZS00MDAwLWFiN2QtMzg1M2Q0YTJhOWQ1IiwiaWF0IjoxNjk5OTY2NzE0LCJleHAiOjE3MDA1NzE1MTR9.pThn2zfUouHYn6Aq_TQWwZhpwv7hZ4gvC07-GD3-4Os
      security:
        - noauthAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                accessToken: YOUR_ACCESS_TOKEN
  /api/member/update-information:
    post:
      tags:
        - 會員
      summary: update personal information
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 永翰
                email:
                  type: string
                  example: ssshello@gmail.com
                phone:
                  type: integer
                  example: '0936965814'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                name: 永翰
                email: hello@gmail.com
                id: ea514474-4ed6-4e08-b59d-e7158c08fe92
                avatar: >-
                  https://lh3.googleusercontent.com/a/ACg8ocJdBkMHHg9SweA2gsH6kYGNG1hjwYK7yyWHESWZUd1Pgdo=s96-c
                loginType: google
                thirdPartyIdentifier: '112345303661950802160'
                isEmailValidate: false
                isSubscribing: false
                phone: '0936965814'
                isPhoneValidate: false
                createdAt: '2023-11-10T07:37:42.000Z'
                updatedAt: '2023-11-10T08:04:32.407Z'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              example:
                message: 此電子郵箱已被使用
  /api/member/sent-validate-email:
    get:
      tags:
        - 會員
      summary: 補寄驗證信件
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                message: your email is already validated
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
              example:
                message: validate mail has sent, please check out your mailbox
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              example:
                message: email field is empty
    post:
      tags:
        - 會員
      summary: sent validate email
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: success
  /api/member/information:
    get:
      tags:
        - 會員
      summary: 個人資訊，請等待訂閱格式出來
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                name: Chang Kenneth
                email: kennethchangla@gmail.com
                id: ea514474-4ed6-4e08-b59d-e7158c08fe92
                avatar: >-
                  https://lh3.googleusercontent.com/a/ACg8ocJdBkMHHg9SweA2gsH6kYGNG1hjwYK7yyWHESWZUd1Pgdo=s96-c
                loginType: google
                thirdPartyIdentifier: '112345303661950802160'
                isEmailValidate: true
                isSubscribing: false
                phone: ''
                isPhoneValidate: false
                createdAt: '2023-11-10T07:37:42.000Z'
                updatedAt: '2023-11-10T07:37:42.000Z'
  /api/member/delete-account:
    delete:
      tags:
        - 會員
      summary: delete account
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                message: succcess
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: refund is processing
                  value:
                    message: Cannot delete account while refund is processing.
                example-1:
                  summary: reject, subscription plan period
                  value:
                    message: >-
                      Cannot delete account while in your subscription plan
                      period.
  /api/member/validate-email:
    get:
      tags:
        - 會員
      summary: mail validate
      security:
        - bearerAuth: []
      parameters:
        - name: signature
          in: query
          schema:
            type: integer
          required: true
          description: link from email, 要有個前端專門處理驗證的畫面
          example: '179623'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                message: 信箱驗證成功
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              example:
                message: 信箱驗證成功
  /api/member/term/{term}:
    post:
      tags:
        - 會員
      summary: sign policy
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: term
          in: path
          schema:
            type: string
          required: true
          description: '[required] privacy, user, subscribe'
          example: privacy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                message: success
    get:
      tags:
        - 會員
      summary: get policy
      security:
        - noauthAuth: []
      parameters:
        - name: term
          in: path
          schema:
            type: string
          required: true
          description: '[required] privacy, user, subscribe'
          example: privacy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                id: 4
                type: privacy
                content: Privacy Policy content goes here.
                createdAt: '2023-11-10T07:09:32.000Z'
                updatedAt: '2023-11-10T07:09:32.000Z'
  /api/article/all-topic-latest:
    get:
      tags:
        - 文章
      summary: 首頁文章各主題最新清單
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                articles:
                  - id: 1
                    title: 你好，世界
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 基本面
                      id: 1
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-11T00:00:00.000Z'
                    previewImage: null
                    type: 1
                    isLimited: true
                    source: null
                  - id: 2
                    title: 雪烏龍
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 總經
                      id: 2
                    author:
                      name: Rick
                      id: 1
                    publishDate: '2023-11-10T00:00:00.000Z'
                    previewImage: https://path/to/image
                    type: 1
                    isLimited: false
                    source: null
  /api/article/{id}:
    get:
      tags:
        - 文章
      summary: get article content
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '123'
      responses:
        undefined:
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123
                title: 你好，世界
                content: >-
                  {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                  this editor instance exports its content as JSON."}]}]}
                topic:
                  name: 基本面
                  id: 1
                author:
                  name: Rick
                  id: 1
                tags:
                  - name: 毛利
                    id: 1
                publishDate: '2023-05-02T00:00:00.000Z'
                previewImage: null
                type: 1
                isLimited: true
                source: null
    put:
      tags:
        - 後台 > 文章
      summary: update article
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - content
                - html
                - topic
                - isLimited
                - isDraft
              properties:
                title:
                  type: string
                  description: ''
                  example: 你好，世界
                content:
                  type: string
                  description: json stringtify
                  example: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                html:
                  type: string
                  description: ''
                  example: >-
                    <h2><strong>新手也能懂的 Kotlin Collection 賞玩門道</strong></h2><img
                    src="https://i.imgur.com/2vCuMM9.jpeg"  alt="canyon"
                    width="500"
                    height="600"><p>在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                    Collection 有關。Collection
                    簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                    List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。</p><p>Kotlin
                    團隊深知資料處理的重要性，在標準函式庫（Stan…</p>
                topic:
                  type: integer
                  description: ''
                  example: '1'
                tags[]:
                  type: integer
                  example: '2'
                isLimited:
                  type: boolean
                  description: ''
                  example: 'false'
                isDraft:
                  type: boolean
                  description: ''
                  example: 'false'
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '123'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123
    delete:
      tags:
        - 後台 > 文章
      summary: delete article by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: success
  /api/podcast/{id}:
    get:
      tags:
        - 文章
      summary: get podcast content
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] podcast id, not the one from spotify'
          example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                title: EP 89 | 科普就是在妖言惑眾 ft. 怪奇事務所所長
                content: >-
                  {"description":"你知道嗎？博恩可能把「信度」講錯了喔","spotifyId":"2WJBISLc7sVsJFrSv3hVLk","spotifyLink":"https://open.spotify.com/episode/2WJBISLc7sVsJFrSv3hVLk","applePodcastLink":"https://open.spotify.com/episode/2WJBISLc7sVsJFrSv3hVLk
                soundOnLink: https://open.spotify.com/episode/2WJBISLc7sVsJFrSv3hVLk"}
                topic:
                  name: 基本面
                  id: 1
                tags:
                  - name: 毛利
                    id: 1
                publishDate: '2023-05-02T00:00:00.000Z'
                previewImage: null
                type: 0
                isLimited: false
                source: null
  /api/article:
    get:
      tags:
        - 文章
      summary: get latest articles
      description: |-
        topic query value

        不傳 -> 全部  
        1 -> 基本面（基本面、總經）  
        2 -> 技術面  
        3 -> 籌碼面  
        4 -> 其他
      parameters:
        - name: topic
          in: query
          schema:
            type: string
          description: |-
            不傳 -> 全部
            1 -> 基本面（基本面、總經）
            2 -> 技術面
            3 -> 籌碼面
            4 -> 其他
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                topic: 0
                currentPage: 0
                pageSize: 30
                totalCount: 515
                articles:
                  - id: 1
                    title: 你好，世界
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 基本面
                      id: 1
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-11T00:00:00.000Z'
                    previewImage: null
                    type: 1
                    isLimited: true
                    source: null
                  - id: 2
                    title: 雪烏龍
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 總經
                      id: 2
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-10T00:00:00.000Z'
                    previewImage: https://path/to/image
                    type: 1
                    isLimited: false
                    source: null
    post:
      tags:
        - 後台 > 文章
      summary: create an article
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - content
                - html
                - topic
                - isLimited
                - clipedContent
                - isDraft
              properties:
                title:
                  type: string
                  description: ''
                  example: 你好，世界
                content:
                  type: string
                  description: json stringtify
                  example: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                html:
                  type: string
                  description: ''
                  example: >-
                    <h2><strong>新手也能懂的 Kotlin Collection 賞玩門道</strong></h2><img
                    src="https://i.imgur.com/2vCuMM9.jpeg"  alt="canyon"
                    width="500"
                    height="600"><p>在開發者的每日工作裡，其實有很大一塊都是在做資料處理。我們抓取、截取、爬取資料，對資料做整理、過濾、轉格式，最後輸出成有系統、有意義的資訊。而在資料處理這一塊，有很大一部份的工作都是跟
                    Collection 有關。Collection
                    簡單來說，就是一群相關聯資料的集合，是個在各程式語言裡普遍常見的資料類型，從最原始的 Array，到重複與否的
                    List、Set，以及 Key-Value 對應的 Map 都屬於這種物件。</p><p>Kotlin
                    團隊深知資料處理的重要性，在標準函式庫（Stan…</p>
                topic:
                  type: integer
                  description: ''
                  example: '1'
                tags[]:
                  type: integer
                  example: '2'
                isLimited:
                  type: boolean
                  description: ''
                  example: 'false'
                clipedContent:
                  type: string
                  description: json stringtify
                  example: >-
                    {"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Wow,
                    this editor instance exports its content as JSON."}]}]}
                isDraft:
                  type: boolean
                  description: ''
                  example: 'true'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                id: 123
  /api/podcast:
    get:
      tags:
        - 文章
      summary: get latest podcasts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                topic: 0
                currentPage: 0
                pageSize: 30
                totalCount: 515
                articles:
                  - id: 1
                    title: 你好，世界
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 基本面
                      id: 1
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-11T00:00:00.000Z'
                    previewImage: null
                    type: 1
                    isLimited: true
                    source: null
                  - id: 2
                    title: 雪烏龍
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 總經
                      id: 2
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-10T00:00:00.000Z'
                    previewImage: https://path/to/image
                    type: 1
                    isLimited: false
                    source: null
  /api/article/authors:
    get:
      tags:
        - 文章
      summary: Authors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                authors:
                  - name: Rick
                    id: 1
                    avatar: https://path/to/img
                  - name: Riick
                    id: 2
                    avatar: https://path/to/img
  /api/article/{id}/related:
    get:
      tags:
        - 文章
      summary: related articles
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[required] article id'
          example: '123'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                articles:
                  - id: 1
                    title: 你好，世界
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 基本面
                      id: 1
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-11T00:00:00.000Z'
                    previewImage: null
                    type: 1
                    isLimited: true
                    source: null
                  - id: 2
                    title: 雪烏龍
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 總經
                      id: 2
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-10T00:00:00.000Z'
                    previewImage: https://path/to/image
                    type: 1
                    isLimited: false
                    source: null
  /api/image/upload:
    post:
      tags:
        - 後台 > 文章
      summary: upload image for article
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  description: ''
                  format: binary
                '':
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://path/to/img
  /api/users:
    get:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 後台帳號 list
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  name: VossA
                  avatar: https://path/to/avatar
                - id: 1
                  name: VossB
                  avatar: https://path/to/avatar
                - id: 1
                  name: VossC
                  avatar: https://path/to/avatar
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                error: permission denied
  /api/user/{id}:
    get:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 檢視指定後台帳號
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: '[ required ] 用戶 id'
          example: '13'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: Voss
                avatar: https://path/to/avatar
                permissions: []
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                error: permission denied
    delete:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 刪除指定後台帳號
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '26'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status":"success"
                }
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "message": "permission denied"
                }
  /api/user/{id}/update-password:
    post:
      tags:
        - 後台 > 帳戶 > Admin（後台管理員-管理後台帳號）
      summary: 更新指定後台帳號密碼
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: password
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '26'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status":"success"
                }
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "message": "permission denied"
                }
  /api/user/create:
    post:
      tags:
        - 後台 > 帳戶
      summary: 創建內部帳戶
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                account:
                  type: string
                  description: '[ required ] '
                  example: Vossvosscc
                password:
                  type: string
                  description: '[ required ] '
                  example: Vossvoss
                name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: success
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                message: permission denied
  /api/user/login:
    post:
      tags:
        - 後台 > 帳戶
      summary: 登入內部帳戶
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - account
                - password
              properties:
                account:
                  type: string
                  description: 最少六位英數
                  example: Remus88888
                password:
                  type: string
                  description: 最少六位英數
                  example: hashpassword123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                accessToken: YOUR_ACCESS_TOKEN
                refreshToken: YOUR_REFRESH_TOKEN
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              example:
                error: Invalid username or password.
  /api/user/refresh:
    post:
      tags:
        - 後台 > 帳戶
      summary: 刷新內部帳戶
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoiUmVtdXM4ODg4OCIsImlhdCI6MTY5OTY3NjE3NSwiZXhwIjoxNzAwMjgwOTc1fQ.EFTzz54PvXLCFDXItjLclBNnxdDZcPIIKDkAQ5CmMQk
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                accessToken: YOUR_ACCESS_TOKEN
                refreshToken: YOUR_REFRESH_TOKEN
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
              example:
                error: Invalid username or password.
  /api/user:
    get:
      tags:
        - 後台 > 帳戶
      summary: 檢視自己後台帳號資料
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: success
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
              example:
                message: permission denied
  /api/user/update-information:
    post:
      tags:
        - 後台 > 帳戶
      summary: 內部帳戶更新自己個人資訊
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Remus88888
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: success
  /api/user/update-avatar:
    post:
      tags:
        - 後台 > 帳戶
      summary: 內部帳戶更新自己個人頭像
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  description: user avatar
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                url: https://path/to/avatar
  /api/user/update-password:
    post:
      tags:
        - 後台 > 帳戶
      summary: 內部帳戶更新自己密碼
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: hashpassword123
                oldPassword:
                  type: string
                  example: hashpassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: success
  /api/dashboard/subscriptions:
    get:
      tags:
        - 後台 > 訂閱 & 發票
      summary: 取得訂閱 & 交易紀錄
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 30
                totalCount: 515
                data:
                  - id: 4
                    memberId: 6
                    isSubscribing: false
                    status: canceled
                    isRefunded: false
                    plan: month
                    amount: 6888
                    email: test@gnim.com
                    nextRenewalDate: '2023-12-04'
                    startAt: '2023-11-04T10:10:47.000Z'
                    endAt: null
                    canceledAt: '2023-11-10T10:10:47.000Z'
                    refundedAt: null
                    companyUniformSerialNo: '12345678'
                    maskedCreditCardNo: 400022******1111
                    createdAt: '2023-11-04T10:05:47.000Z'
                    updatedAt: '2023-11-04T10:05:47.000Z'
                    bills:
                      - id: 10
                        memberId: 6
                        subscriptionId: 4
                        type: payment
                        plan: month
                        startAt: '2023-10-04T10:10:47.000Z'
                        endAt: '2023-11-04T10:10:47.000Z'
                        amount: 6888
                        taxAmount: 300
                        maskedCreditCardNo: 400022******1111
                        createdAt: '2023-10-04T10:05:47.000Z'
                  - id: 3
                    memberId: 5
                    isSubscribing: true
                    status: active
                    plan: month
                    amount: 6888
                    email: test@gnim.com
                    nextRenewalDate: '2023-12-04'
                    startAt: '2023-11-04T10:10:47.000Z'
                    endAt: null
                    companyUniformSerialNo: '12345678'
                    maskedCreditCardNo: 400022******1111
                    createdAt: '2023-11-04T10:05:47.000Z'
                    updatedAt: '2023-11-04T10:05:47.000Z'
                    bills:
                      - id: 14
                        memberId: 5
                        subscriptionId: 3
                        type: payment
                        plan: month
                        startAt: '2023-11-04T10:10:47.000Z'
                        endAt: '2023-12-04T10:10:47.000Z'
                        amount: 6888
                        taxAmount: 300
                        maskedCreditCardNo: 400022******1111
                        createdAt: '2023-11-04T10:05:47.000Z'
                      - id: 6
                        memberId: 5
                        subscriptionId: 3
                        type: payment
                        plan: month
                        startAt: '2023-10-04T10:10:47.000Z'
                        endAt: '2023-11-04T10:10:47.000Z'
                        amount: 6888
                        taxAmount: 300
                        maskedCreditCardNo: 400022******1111
                        createdAt: '2023-10-04T10:05:47.000Z'
  /api/dashboard/invoices:
    get:
      tags:
        - 後台 > 訂閱 & 發票
      summary: 取得發票開立紀錄
      description: |-
        回傳欄位  
        \* 代表必定有值的欄位  
          
        \* memberId INT, 會員 ID  
        \* subscriptionId INT, 訂閱資料 ID  
        \* billId INT, 交易 ID  
        \* status STRING  
        \* amount INT, 交易金額  
        \* taxAmount INT, 稅金金額  
        \* uniformInvoiceNo STRING, 發票號碼  
        \* uniformInvoiceRandomNo STRING, 發票防偽隨機碼  
        \* email  
        eInvoicePlatformNo STRING, 發票平台自訂編號  
        companyUniformSerialNo STRING, 公司統一編號
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 30
                totalCount: 515
                data:
                  - id: 10
                    memberId: 5
                    subscriptionId: 3
                    billId: 6
                    status: invoice-status-string
                    amount: 6888
                    taxAmount: 300
                    uniformInvoiceNo: AB00000001
                    uniformInvoiceRandomNo: '1234'
                    email: test@gnim.com.tw
                    eInvoicePlatformNo: abab222222
                    companyUniformSerialNo: '12345678'
                    createdAt: '2023-11-04T10:05:47.000Z'
                    updatedAt: '2023-11-04T10:05:47.000Z'
  /api/dashboard/upsert-refund-amount:
    post:
      tags:
        - 後台 > 訂閱 & 發票
      summary: 完成退費 (i.e. 編輯已退款金額)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                memberId: 1
                subscriptionId: 15
                amount: 2888
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 4
                  memberId: 6
                  isSubscribing: false
                  status: canceled
                  isRefunded: true
                  plan: month
                  amount: 6888
                  email: test@gnim.com
                  nextRenewalDate: '2023-12-04'
                  startAt: '2023-11-04T10:10:47.000Z'
                  endAt: null
                  canceledAt: '2023-11-10T10:10:47.000Z'
                  refundedAt: '2023-11-12T10:10:47.000Z'
                  companyUniformSerialNo: '12345678'
                  maskedCreditCardNo: 400022******1111
                  createdAt: '2023-11-04T10:05:47.000Z'
                  updatedAt: '2023-11-04T10:05:47.000Z'
                  bills:
                    - id: 12
                      memberId: 6
                      subscriptionId: 4
                      type: refund
                      plan: month
                      startAt: null
                      endAt: null
                      amount: 2888
                      taxAmount: 300
                      createdAt: '2023-10-04T10:05:47.000Z'
                    - id: 10
                      memberId: 6
                      subscriptionId: 4
                      type: payment
                      plan: month
                      startAt: '2023-10-04T10:10:47.000Z'
                      endAt: '2023-11-04T10:10:47.000Z'
                      amount: 6888
                      taxAmount: 300
                      maskedCreditCardNo: 400022******1111
                      createdAt: '2023-10-04T10:05:47.000Z'
  /api/:
    get:
      tags:
        - 搜尋
      summary: search articles by tag, optional with topic
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/topic-tag:
    get:
      tags:
        - 標籤、主題
      summary: 前臺 get tags with topics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                topics:
                  - id: 1
                    name: 基礎面
                    tags:
                      - id: 1
                        name: 毛利
                  - id: 2
                    name: 技術面面
                    tags:
                      - id: 1
                        name: 毛利
  /api/topic-all:
    get:
      tags:
        - 標籤、主題
      summary: 後台 get all topic with tag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                topics:
                  - id: 1
                    name: 基礎面
                    tags:
                      - id: 1
                        name: 毛利
                        sort: 1
                        hide: true
                  - id: 2
                    name: 技術面面
                    tags:
                      - id: 1
                        name: 毛利
                        sort: 1
                        hide: false
  /api/tag:
    post:
      tags:
        - 標籤、主題
      summary: 後台 新增標籤
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - topic
                - hide
              properties:
                name:
                  type: string
                  description: ''
                  example: 布林通道
                topic:
                  type: integer
                  description: topic 類的 id
                  example: '1'
                hide:
                  type: boolean
                  description: ''
                  example: 'true'
                '':
                  type: string
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: success
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: not found
    delete:
      tags:
        - 標籤、主題
      summary: 後台 刪除標籤
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: success
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: not found
  /api/edit-tags-display-setting:
    post:
      tags:
        - 標籤、主題
      summary: 後台  edit tags display setting
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                tags[0][id]:
                  type: integer
                  example: '1'
                tags[0][name]:
                  type: string
                  example: a tag
                tags[0][hide]:
                  type: boolean
                  example: 'false'
                tags[1][id]:
                  type: integer
                  example: '3'
                tags[1][name]:
                  type: string
                  example: c tag
                tags[1][hide]:
                  type: boolean
                  example: 'true'
                tags[2][id]:
                  type: integer
                  example: '4'
                tags[2][name]:
                  type: string
                  example: b tag
                tags[2][hide]:
                  type: boolean
                  example: 'false'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: success
  /api/tag/{id}:
    put:
      tags:
        - 標籤、主題
      summary: 後台 update tag
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - hide
              properties:
                name:
                  type: string
                  description: ''
                  example: new name
                hide:
                  type: boolean
                  description: boolean
                  example: 'true'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: success
  /api/banner:
    get:
      tags:
        - Banner
      summary: get Banner content
      description: |-
        type 是指資料類型， source 指某類型的來源(yt type source from which channel)

        article type:  
        0 -> podcast

        1 -> tiptap article

        2 -> youtube

        source:  
        null -> 文章、podcast

        1 -> 金玉峰 yt 頻道

        2 -> 股耐 yt 頻道
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 1
                  title: 你好，世界
                  description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                  topic:
                    name: 基本面
                    id: 1
                  author:
                    name: Rick
                    id: 1
                  tags:
                    - name: 毛利
                      id: 1
                  publishDate: '2023-11-11T00:00:00.000Z'
                  previewImage: null
                  type: 1
                  isLimited: true
                  source: null
                - id: 2
                  title: 雪烏龍
                  description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                  topic:
                    name: 總經
                    id: 2
                  author:
                    name: Rick
                    id: 1
                  tags:
                    - name: 毛利
                      id: 1
                  publishDate: '2023-11-10T00:00:00.000Z'
                  previewImage: https://path/to/image
                  type: 1
                  isLimited: false
                  source: 1
  /api/news:
    get:
      tags:
        - 新聞
      summary: 新聞列表
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 新聞列表-if db
                  value:
                    - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                      time: '2023-05-02T00:00:00.000Z'
                      link: >-
                        https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                      rate: 0
                      tag:
                        name: 半導體
                        id: 123
                    - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                      time: '2023-05-02T00:00:00.000Z'
                      link: >-
                        https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                      rate: 0
                      tag:
                        name: 半導體
                        id: 123
                example-1:
                  summary: 新聞列表 -if not save in db
                  value:
                    - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                      time: '2023-05-02T00:00:00.000Z'
                      link: >-
                        https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                      rate: 0
                      tag: 半導體
                    - title: 中碳躋身半導體鏈 中鋼小金雞變身大金鵬
                      time: '2023-05-02T00:00:00.000Z'
                      link: >-
                        https://money.udn.com/money/story/5612/7495944?from=edn_newestlist_rank'
                      rate: 0
                      tag: 半導體
  /api/search/query:
    get:
      tags:
        - 搜尋
      summary: query
      parameters:
        - name: q
          in: query
          schema:
            type: string
          required: true
          description: ''
          example: hello
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
        - name: topic
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 30
                totalCount: 515
                articles:
                  - id: 1
                    title: 你好，世界
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 基本面
                      id: 1
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-11T00:00:00.000Z'
                    previewImage: null
                    type: 1
                    isLimited: true
                    source: null
                  - id: 2
                    title: 雪烏龍
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 總經
                      id: 2
                    author:
                      name: Rick
                      id: 1
                    publishDate: '2023-11-10T00:00:00.000Z'
                    previewImage: https://path/to/image
                    type: 1
                    isLimited: false
                    source: null
  /api/search/tag:
    get:
      tags:
        - 搜尋
      summary: get by tag
      parameters:
        - name: tag
          in: query
          schema:
            type: integer
          required: true
          description: tag id
          example: '1'
        - name: page
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
        - name: size
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '30'
        - name: topic
          in: query
          schema:
            type: integer
          required: true
          description: ''
          example: '0'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 30
                totalCount: 515
                articles:
                  - id: 1
                    title: 你好，世界
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 基本面
                      id: 1
                    author:
                      name: Rick
                      id: 1
                    tags:
                      - name: 毛利
                        id: 1
                    publishDate: '2023-11-11T00:00:00.000Z'
                    previewImage: null
                    type: 1
                    isLimited: true
                    source: null
                  - id: 2
                    title: 雪烏龍
                    description: 揭示股市投資中的基本面因素，包括公司財務狀況、產品競爭力、行業趨勢等，為投資者提供深入了解企業價值的觀點
                    topic:
                      name: 總經
                      id: 2
                    author:
                      name: Rick
                      id: 1
                    publishDate: '2023-11-10T00:00:00.000Z'
                    previewImage: https://path/to/image
                    type: 1
                    isLimited: false
                    source: null
  /api/subscription/latest-plan:
    get:
      tags:
        - 訂閱
      summary: 取得會員訂閱狀態
      description: |-
        1\. 訂閱狀態 `status`:

        - 訂閱中 `active`
        - 已取消 `canceled`
        - 已關閉自動續訂 `renewal_disabled`
            

        2\. 判斷是否在訂閱資格期間：以回傳欄位 `isSubscribing` 為準

        3\. 是否已退款：以 `isRefunded` 欄位為準
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 使用者訂閱中
                  value:
                    data:
                      id: 3
                      memberId: 5
                      isSubscribing: true
                      status: active
                      plan: month
                      amount: 6888
                      email: test@gnim.com
                      nextRenewalDate: '2023-12-04'
                      startAt: '2023-11-04T10:10:47.000Z'
                      endAt: null
                      companyUniformSerialNo: '12345678'
                      maskedCreditCardNo: 400022******1111
                      createdAt: '2023-11-04T10:05:47.000Z'
                      updatedAt: '2023-11-04T10:05:47.000Z'
                example-1:
                  summary: 使用者取消訂閱，未退款未到期
                  value:
                    data:
                      id: 3
                      memberId: 5
                      isSubscribing: true
                      isRefunded: false
                      status: canceled
                      plan: month
                      amount: 6888
                      email: test@gnim.com
                      nextRenewalDate: '2023-12-04'
                      startAt: '2023-11-04T10:10:47.000Z'
                      endAt: null
                      canceledAt: '2023-11-10T10:10:47.000Z'
                      refundedAt: null
                      companyUniformSerialNo: '12345678'
                      maskedCreditCardNo: 400022******1111
                      createdAt: '2023-11-04T10:05:47.000Z'
                      updatedAt: '2023-11-04T10:05:47.000Z'
                example-2:
                  summary: 使用者取消訂閱，已退款已到期
                  value:
                    data:
                      id: 3
                      memberId: 5
                      isSubscribing: false
                      isRefunded: true
                      status: canceled
                      plan: month
                      amount: 6888
                      email: test@gnim.com
                      nextRenewalDate: '2023-12-04'
                      startAt: '2023-11-04T10:10:47.000Z'
                      endAt: '2023-11-04T10:10:47.000Z'
                      canceledAt: '2023-11-10T10:10:47.000Z'
                      refundedAt: '2023-11-11T10:10:47.000Z'
                      companyUniformSerialNo: '12345678'
                      maskedCreditCardNo: 400022******1111
                      createdAt: '2023-11-04T10:05:47.000Z'
                      updatedAt: '2023-11-04T10:05:47.000Z'
                example-3:
                  summary: 使用者目前未訂閱
                  value:
                    data: null
  /api/subscription/bills:
    get:
      tags:
        - 訂閱
      summary: 取得付款紀錄
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currentPage: 0
                pageSize: 30
                totalCount: 515
                data:
                  - id: 14
                    memberId: 5
                    subscriptionId: 3
                    plan: month
                    type: payment
                    startAt: '2023-11-04T10:10:47.000Z'
                    endAt: '2023-12-04T10:10:47.000Z'
                    amount: 6888
                    taxAmount: 300
                    maskedCreditCardNo: 400022******1111
                    createdAt: '2023-11-04T10:05:47.000Z'
                  - id: 6
                    memberId: 5
                    subscriptionId: 3
                    plan: month
                    type: payment
                    startAt: '2023-10-04T10:10:47.000Z'
                    endAt: '2023-11-04T10:10:47.000Z'
                    amount: 6888
                    taxAmount: 300
                    maskedCreditCardNo: 400022******1111
                    createdAt: '2023-10-04T10:05:47.000Z'
  /api/subscription/request-payment-payload:
    post:
      tags:
        - 訂閱
      summary: 要求藍新付款  (使用者確認付款)
      description: >-
        Request 參數：


        1. \* plan: 訂閱方案, valid inputs: \["month", "quarter", "year"\]

        2. \* returnUrl: 完成藍新付款後要前往的前端 URL

        3. \* backUrl: 取消付款後要前往的前端 URL
            
        4. companyUniformSerialNo: 公司發票統編
            

        Response：將兩個回傳參數直接以 POST Form 表單帶往藍新的付款 URL  

        藍新測試站：[https://ccore.newebpay.com/MPG/period](https://ccore.newebpay.com/MPG/period)  

        藍新正式站：[https://core.newebpay.com/MPG/period](https://core.newebpay.com/MPG/period)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                plan: month
                companyUniformSerialNo: '12345678'
                returnUrl: https://gnim.com.tw/payment-completed
                backUrl: https://gnim.com.tw/payment-canceled
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  MerchantID_: MS350610354
                  PostData_: >-
                    fc22f8e6a80a8b168d990de07bb43dcf892da53d99a8a2cb1a4700c9ae26c4a2cdbfea96bdb02628359bdbcbe04c162f3182a0c434139330c073f22b11466143809966b521656e16f6a1f420492d860d992248eafc709e3aa70479ecf73f9f31ff3c509b82e1dc04f7a8a129a89eac69c61ada86d536dbfc9ce7dbb2e024b14677b3752bbc9fafd7d598b88321a72e8a54a9bbe7b93db91a9ecc87480d3ff6b497cd0801c21e6c2ad3cd78f9a434955c974845e59d1ec93415fac7ca7dfae2073deca4a978841ee96960fb28eee82b0102b7be84362d2f1e1c8091ab9a2e7c31d0b4865c3244b7fa8911b1b5a5323cda71467e986d270c32fe5cbaf976efd74a7b56ff9e7eab97e5e0979ee3f2b2c200993b9656ca7f6a88c06977d4abd6c30799ca90ca4051255855693a81ba98cbd0ee3d324cbadd8c7368530e9f3b0dbe1959db96506b9505d47a3a3f309569578e
  /api/subscription/re-request-payment-payload:
    post:
      tags:
        - 訂閱
      summary: 重新要求藍新付款 (更新付款資料)
      description: |-
        參數幾乎同「要求藍新付款」，

        此 API 不同的地方在於用途，  
        當使用者已經有一筆有效的訂閱資格，但要更改付款資訊、Email 時，使用此 API，  
        更新付款資訊不允許更換方案，因此 Request 不需傳入 `plan` 參數。

        companyUniformSerialNo 統編欄位，如不傳入，預設沿用上一筆訂閱設定，如傳入 null，代表新的訂閱資料不使用統編。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                companyUniformSerialNo: '12345678'
                returnUrl: https://gnim.com.tw/payment-completed
                backUrl: https://gnim.com.tw/payment-canceled
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/subscription/change-plan:
    post:
      tags:
        - 訂閱
      summary: 更換方案
      description: 用來讓使用者更換方案，更換後回傳新的訂閱資訊。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                newPlan: quarter
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 3
                  memberId: 5
                  status: subscription-status-string
                  plan: quarter
                  autoRenewal: true
                  amount: 16888
                  email: test@gnim.com
                  nextRenewalDate: '2024-02-04'
                  startAt: '2023-11-04T10:10:47.000Z'
                  endAt: null
                  companyUniformSerialNo: '12345678'
                  maskedCreditCardNo: 400022******1111
                  createdAt: '2023-11-04T10:05:47.000Z'
                  updatedAt: '2023-11-04T10:05:47.000Z'
  /api/subscription/configure-auto-renewal:
    post:
      tags:
        - 訂閱
      summary: 啟用或關閉自動續訂
      description: |-
        參數：

        1. `active`: boolean，是否啟用自動續訂
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                active: true
      responses:
        '200':
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 3
                  memberId: 5
                  status: subscription-status-string
                  plan: month
                  autoRenewal: false
                  amount: 6888
                  email: test@gnim.com
                  nextRenewalDate: '2023-12-04'
                  startAt: '2023-11-04T10:10:47.000Z'
                  endAt: null
                  companyUniformSerialNo: '12345678'
                  maskedCreditCardNo: 400022******1111
                  createdAt: '2023-11-04T10:05:47.000Z'
                  updatedAt: '2023-11-04T10:05:47.000Z'
  /api/subscription/cancel-and-request-refund:
    post:
      tags:
        - 訂閱
      summary: 取消訂閱
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
